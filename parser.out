Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    STR
    TRUE
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR
Rule 2     neuraladdfuncdir -> ID SEMICOLON
Rule 3     neuralmainjump -> <empty>
Rule 4     varsgl -> VARS vars
Rule 5     varsgl -> empty
Rule 6     vars -> typing COLON neuralinsertvar varsarr varsmul vars
Rule 7     vars -> empty
Rule 8     neuralinsertvar -> ID
Rule 9     varsmul -> SEMICOLON
Rule 10    varsmul -> COMMA neuralinsertvar varsarr varsmul
Rule 11    varsarr -> neuralinitdim CTEINT neuralenddim
Rule 12    varsarr -> empty
Rule 13    neuralenddim -> RIGHTSQR
Rule 14    neuralinitdim -> LEFTSQR
Rule 15    idarray -> neuralinitarray exp verify RIGHTSQR
Rule 16    idarray -> empty
Rule 17    neuralinitarray -> LEFTSQR
Rule 18    verify -> <empty>
Rule 19    typing -> INT
Rule 20    typing -> FLOAT
Rule 21    typing -> CHAR
Rule 22    modules -> FUNCTION functype neuralinsertfuncs funcparam
Rule 23    modules -> empty
Rule 24    neuralinsertfuncs -> ID
Rule 25    funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules
Rule 26    neuralendfuncs -> <empty>
Rule 27    neuralfuncsize -> <empty>
Rule 28    neuralinitfuncs -> <empty>
Rule 29    functype -> VOID
Rule 30    functype -> typing
Rule 31    parameters -> typing COLON neuralinsertparam idarray mulparams
Rule 32    parameters -> empty
Rule 33    neuralinsertparam -> ID
Rule 34    mulparams -> COMMA parameters
Rule 35    mulparams -> empty
Rule 36    statutes -> assign statuteaux
Rule 37    statutes -> reading statuteaux
Rule 38    statutes -> writing statuteaux
Rule 39    statutes -> returning statuteaux
Rule 40    statutes -> ifing statuteaux
Rule 41    statutes -> whiling statuteaux
Rule 42    statutes -> foring statuteaux
Rule 43    statutes -> exp statuteaux
Rule 44    statutes -> media statuteaux
Rule 45    statutes -> plotxy statuteaux
Rule 46    statutes -> mediana statuteaux
Rule 47    statutes -> moda statuteaux
Rule 48    statutes -> variance statuteaux
Rule 49    statutes -> stdev statuteaux
Rule 50    statuteaux -> statutes
Rule 51    statuteaux -> empty
Rule 52    media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 53    mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 54    moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 55    stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 56    variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 57    plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
Rule 58    specialfunclist -> <empty>
Rule 59    specfuncnumbers -> CTEINT neuralnum mulnumeros
Rule 60    specfuncnumbers -> CTEFLOAT neuralnum mulnumeros
Rule 61    neuralnum -> <empty>
Rule 62    mulnumeros -> COMMA specfuncnumbers
Rule 63    mulnumeros -> empty
Rule 64    assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON
Rule 65    neuralassign -> ID
Rule 66    neuralassign2 -> EQUAL
Rule 67    assignexp -> exp
Rule 68    returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON
Rule 69    reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
Rule 70    neuralreadid -> ID
Rule 71    mulread -> COMMA neuralreadid idarray mulread
Rule 72    mulread -> empty
Rule 73    writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
Rule 74    neuralwrite -> writetype
Rule 75    neuralwrite -> exp
Rule 76    writetype -> STRING
Rule 77    writetype -> CTECHAR
Rule 78    mulwrite -> COMMA neuralwrite mulwrite
Rule 79    mulwrite -> empty
Rule 80    ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
Rule 81    elsing -> neuralelse LEFTBR statutes RIGHTBR
Rule 82    elsing -> empty
Rule 83    neuralelse -> ELSE
Rule 84    neuralif -> RIGHTPAR
Rule 85    whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
Rule 86    neuralwhile -> WHILE
Rule 87    neuralwhile2 -> RIGHTPAR
Rule 88    foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
Rule 89    neuralfor -> ID
Rule 90    neuralfor2 -> TO
Rule 91    neuralfor3 -> DO
Rule 92    exp -> andexp exp1
Rule 93    exp1 -> OR exp
Rule 94    exp1 -> empty
Rule 95    andexp -> boolexp andexp1
Rule 96    andexp1 -> neuraland andexp
Rule 97    andexp1 -> empty
Rule 98    neuraland -> AND
Rule 99    boolexp -> arithexp boolexp1
Rule 100   boolexp1 -> neuralbool arithexp
Rule 101   boolexp1 -> empty
Rule 102   neuralbool -> GREATER
Rule 103   neuralbool -> GREATERAND
Rule 104   neuralbool -> LESSER
Rule 105   neuralbool -> LESSERAND
Rule 106   neuralbool -> SAME
Rule 107   neuralbool -> NOTSAME
Rule 108   neuralbool -> NOT
Rule 109   arithexp -> geoexp arithexp1
Rule 110   arithexp1 -> neuralarith arithexp
Rule 111   arithexp1 -> empty
Rule 112   neuralarith -> PLUS
Rule 113   neuralarith -> REST
Rule 114   geoexp -> finexp geoexp1
Rule 115   geoexp1 -> neuralgeo geoexp
Rule 116   geoexp1 -> empty
Rule 117   neuralgeo -> TIMES
Rule 118   neuralgeo -> DIVIDE
Rule 119   addbottom -> LEFTPAR
Rule 120   popbottom -> RIGHTPAR
Rule 121   finexp -> addbottom exp popbottom
Rule 122   finexp -> cteexp
Rule 123   cteexp -> CTEINT
Rule 124   cteexp -> CTEFLOAT
Rule 125   cteexp -> CTECHAR
Rule 126   cteexp -> ID neuralexist paramsexp
Rule 127   neuralexist -> <empty>
Rule 128   paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar
Rule 129   paramsexp -> idarray
Rule 130   paramsexp2 -> exp neuralpar2 mulparamsexp
Rule 131   paramsexp2 -> empty
Rule 132   neuralpar -> RIGHTPAR
Rule 133   neuralera -> <empty>
Rule 134   neuralpar2 -> <empty>
Rule 135   mulparamsexp -> COMMA exp neuralpar2 mulparamsexp
Rule 136   mulparamsexp -> empty
Rule 137   empty -> <empty>

Terminals, with rules where they appear

AND                  : 98
CHAR                 : 21
COLON                : 6 31
COMMA                : 10 34 62 71 78 135
CTECHAR              : 77 125
CTEFLOAT             : 60 124
CTEINT               : 11 59 123
DIVIDE               : 118
DO                   : 85 91
ELSE                 : 83
EQUAL                : 66 88
FALSE                : 
FLOAT                : 20
FOR                  : 88
FUNCTION             : 22
GREATER              : 102
GREATERAND           : 103
ID                   : 2 8 24 33 65 70 89 126
IF                   : 80
INT                  : 19
LEFTBR               : 1 25 80 81 85 88
LEFTPAR              : 1 25 52 53 54 55 56 57 68 69 73 80 85 119 128
LEFTSQR              : 14 17
LESSER               : 104
LESSERAND            : 105
MAIN                 : 1
MEDIA                : 52
MEDIANA              : 53
MODA                 : 54
NOT                  : 108
NOTSAME              : 107
OR                   : 93
PLOTXY               : 57
PLUS                 : 112
PROGRAM              : 1
READ                 : 69
REST                 : 113
RETURN               : 68
RIGHTBR              : 1 25 80 81 85 88
RIGHTPAR             : 1 25 52 53 54 55 56 57 68 69 73 84 87 120 132
RIGHTSQR             : 13 15
SAME                 : 106
SEMICOLON            : 2 9 25 52 53 54 55 56 57 64 68 69 73
STDEV                : 55
STR                  : 
STRING               : 76
THEN                 : 80
TIMES                : 117
TO                   : 90
TRUE                 : 
VARIANZA             : 56
VARS                 : 4
VOID                 : 29
WHILE                : 86
WRITE                : 73
error                : 

Nonterminals, with rules where they appear

addbottom            : 121
andexp               : 92 96
andexp1              : 95
arithexp             : 99 100 110
arithexp1            : 109
assign               : 36
assignexp            : 64
boolexp              : 95
boolexp1             : 99
cteexp               : 122
elsing               : 80
empty                : 5 7 12 16 23 32 35 51 63 72 79 82 94 97 101 111 116 131 136
exp                  : 15 43 67 68 75 80 85 88 88 93 121 130 135
exp1                 : 92
finexp               : 114
foring               : 42
funcparam            : 22
functype             : 22
geoexp               : 109 115
geoexp1              : 114
idarray              : 31 64 69 71 88 129
ifing                : 40
media                : 44
mediana              : 46
moda                 : 47
modules              : 1 25
mulnumeros           : 59 60
mulparams            : 31
mulparamsexp         : 130 135
mulread              : 69 71
mulwrite             : 73 78
neuraladdfuncdir     : 1
neuraland            : 96
neuralarith          : 110
neuralassign         : 64
neuralassign2        : 64
neuralbool           : 100
neuralelse           : 81
neuralenddim         : 11
neuralendfuncs       : 25
neuralera            : 128
neuralexist          : 126
neuralfor            : 88
neuralfor2           : 88
neuralfor3           : 88
neuralfuncsize       : 25
neuralgeo            : 115
neuralif             : 80
neuralinitarray      : 15
neuralinitdim        : 11
neuralinitfuncs      : 25
neuralinsertfuncs    : 22
neuralinsertparam    : 31
neuralinsertvar      : 6 10
neuralmainjump       : 1
neuralnum            : 59 60
neuralpar            : 128
neuralpar2           : 130 135
neuralreadid         : 69 71
neuralwhile          : 85
neuralwhile2         : 85
neuralwrite          : 73 78
parameters           : 25 34
paramsexp            : 126
paramsexp2           : 128
plotxy               : 45
popbottom            : 121
program              : 0
reading              : 37
returning            : 39
specfuncnumbers      : 52 53 54 55 56 57 62
specialfunclist      : 52 53 54 55 56 57
statuteaux           : 36 37 38 39 40 41 42 43 44 45 46 47 48 49
statutes             : 1 25 50 80 81 85 88
stdev                : 49
typing               : 6 30 31
variance             : 48
vars                 : 4 6
varsarr              : 6 10
varsgl               : 1 25
varsmul              : 6 10
verify               : 15
whiling              : 41
writetype            : 74
writing              : 38

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR
    (2) neuraladdfuncdir -> . ID SEMICOLON

    ID              shift and go to state 4

    neuraladdfuncdir               shift and go to state 3

state 3

    (1) program -> PROGRAM neuraladdfuncdir . varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR
    (4) varsgl -> . VARS vars
    (5) varsgl -> . empty
    (137) empty -> .

    VARS            shift and go to state 6
    FUNCTION        reduce using rule 137 (empty -> .)
    MAIN            reduce using rule 137 (empty -> .)

    varsgl                         shift and go to state 5
    empty                          shift and go to state 7

state 4

    (2) neuraladdfuncdir -> ID . SEMICOLON

    SEMICOLON       shift and go to state 8


state 5

    (1) program -> PROGRAM neuraladdfuncdir varsgl . modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR
    (22) modules -> . FUNCTION functype neuralinsertfuncs funcparam
    (23) modules -> . empty
    (137) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 137 (empty -> .)

    modules                        shift and go to state 9
    empty                          shift and go to state 11

state 6

    (4) varsgl -> VARS . vars
    (6) vars -> . typing COLON neuralinsertvar varsarr varsmul vars
    (7) vars -> . empty
    (19) typing -> . INT
    (20) typing -> . FLOAT
    (21) typing -> . CHAR
    (137) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 137 (empty -> .)
    MAIN            reduce using rule 137 (empty -> .)
    LEFTBR          reduce using rule 137 (empty -> .)

    vars                           shift and go to state 12
    typing                         shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) varsgl -> empty .

    FUNCTION        reduce using rule 5 (varsgl -> empty .)
    MAIN            reduce using rule 5 (varsgl -> empty .)
    LEFTBR          reduce using rule 5 (varsgl -> empty .)


state 8

    (2) neuraladdfuncdir -> ID SEMICOLON .

    VARS            reduce using rule 2 (neuraladdfuncdir -> ID SEMICOLON .)
    FUNCTION        reduce using rule 2 (neuraladdfuncdir -> ID SEMICOLON .)
    MAIN            reduce using rule 2 (neuraladdfuncdir -> ID SEMICOLON .)


state 9

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules . MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR

    MAIN            shift and go to state 18


state 10

    (22) modules -> FUNCTION . functype neuralinsertfuncs funcparam
    (29) functype -> . VOID
    (30) functype -> . typing
    (19) typing -> . INT
    (20) typing -> . FLOAT
    (21) typing -> . CHAR

    VOID            shift and go to state 20
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17

    functype                       shift and go to state 19
    typing                         shift and go to state 21

state 11

    (23) modules -> empty .

    MAIN            reduce using rule 23 (modules -> empty .)


state 12

    (4) varsgl -> VARS vars .

    FUNCTION        reduce using rule 4 (varsgl -> VARS vars .)
    MAIN            reduce using rule 4 (varsgl -> VARS vars .)
    LEFTBR          reduce using rule 4 (varsgl -> VARS vars .)


state 13

    (6) vars -> typing . COLON neuralinsertvar varsarr varsmul vars

    COLON           shift and go to state 22


state 14

    (7) vars -> empty .

    FUNCTION        reduce using rule 7 (vars -> empty .)
    MAIN            reduce using rule 7 (vars -> empty .)
    LEFTBR          reduce using rule 7 (vars -> empty .)


state 15

    (19) typing -> INT .

    COLON           reduce using rule 19 (typing -> INT .)
    ID              reduce using rule 19 (typing -> INT .)


state 16

    (20) typing -> FLOAT .

    COLON           reduce using rule 20 (typing -> FLOAT .)
    ID              reduce using rule 20 (typing -> FLOAT .)


state 17

    (21) typing -> CHAR .

    COLON           reduce using rule 21 (typing -> CHAR .)
    ID              reduce using rule 21 (typing -> CHAR .)


state 18

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN . LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR

    LEFTPAR         shift and go to state 23


state 19

    (22) modules -> FUNCTION functype . neuralinsertfuncs funcparam
    (24) neuralinsertfuncs -> . ID

    ID              shift and go to state 25

    neuralinsertfuncs              shift and go to state 24

state 20

    (29) functype -> VOID .

    ID              reduce using rule 29 (functype -> VOID .)


state 21

    (30) functype -> typing .

    ID              reduce using rule 30 (functype -> typing .)


state 22

    (6) vars -> typing COLON . neuralinsertvar varsarr varsmul vars
    (8) neuralinsertvar -> . ID

    ID              shift and go to state 27

    neuralinsertvar                shift and go to state 26

state 23

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR . RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR

    RIGHTPAR        shift and go to state 28


state 24

    (22) modules -> FUNCTION functype neuralinsertfuncs . funcparam
    (25) funcparam -> . LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules

    LEFTPAR         shift and go to state 30

    funcparam                      shift and go to state 29

state 25

    (24) neuralinsertfuncs -> ID .

    LEFTPAR         reduce using rule 24 (neuralinsertfuncs -> ID .)


state 26

    (6) vars -> typing COLON neuralinsertvar . varsarr varsmul vars
    (11) varsarr -> . neuralinitdim CTEINT neuralenddim
    (12) varsarr -> . empty
    (14) neuralinitdim -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 34
    SEMICOLON       reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)

    varsarr                        shift and go to state 31
    neuralinitdim                  shift and go to state 32
    empty                          shift and go to state 33

state 27

    (8) neuralinsertvar -> ID .

    LEFTSQR         reduce using rule 8 (neuralinsertvar -> ID .)
    SEMICOLON       reduce using rule 8 (neuralinsertvar -> ID .)
    COMMA           reduce using rule 8 (neuralinsertvar -> ID .)


state 28

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR . LEFTBR neuralmainjump statutes RIGHTBR

    LEFTBR          shift and go to state 35


state 29

    (22) modules -> FUNCTION functype neuralinsertfuncs funcparam .

    MAIN            reduce using rule 22 (modules -> FUNCTION functype neuralinsertfuncs funcparam .)


state 30

    (25) funcparam -> LEFTPAR . parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules
    (31) parameters -> . typing COLON neuralinsertparam idarray mulparams
    (32) parameters -> . empty
    (19) typing -> . INT
    (20) typing -> . FLOAT
    (21) typing -> . CHAR
    (137) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    RIGHTPAR        reduce using rule 137 (empty -> .)

    parameters                     shift and go to state 36
    typing                         shift and go to state 37
    empty                          shift and go to state 38

state 31

    (6) vars -> typing COLON neuralinsertvar varsarr . varsmul vars
    (9) varsmul -> . SEMICOLON
    (10) varsmul -> . COMMA neuralinsertvar varsarr varsmul

    SEMICOLON       shift and go to state 40
    COMMA           shift and go to state 41

    varsmul                        shift and go to state 39

state 32

    (11) varsarr -> neuralinitdim . CTEINT neuralenddim

    CTEINT          shift and go to state 42


state 33

    (12) varsarr -> empty .

    SEMICOLON       reduce using rule 12 (varsarr -> empty .)
    COMMA           reduce using rule 12 (varsarr -> empty .)


state 34

    (14) neuralinitdim -> LEFTSQR .

    CTEINT          reduce using rule 14 (neuralinitdim -> LEFTSQR .)


state 35

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR . neuralmainjump statutes RIGHTBR
    (3) neuralmainjump -> .

    READ            reduce using rule 3 (neuralmainjump -> .)
    WRITE           reduce using rule 3 (neuralmainjump -> .)
    RETURN          reduce using rule 3 (neuralmainjump -> .)
    IF              reduce using rule 3 (neuralmainjump -> .)
    FOR             reduce using rule 3 (neuralmainjump -> .)
    MEDIA           reduce using rule 3 (neuralmainjump -> .)
    PLOTXY          reduce using rule 3 (neuralmainjump -> .)
    MEDIANA         reduce using rule 3 (neuralmainjump -> .)
    MODA            reduce using rule 3 (neuralmainjump -> .)
    VARIANZA        reduce using rule 3 (neuralmainjump -> .)
    STDEV           reduce using rule 3 (neuralmainjump -> .)
    ID              reduce using rule 3 (neuralmainjump -> .)
    WHILE           reduce using rule 3 (neuralmainjump -> .)
    LEFTPAR         reduce using rule 3 (neuralmainjump -> .)
    CTEINT          reduce using rule 3 (neuralmainjump -> .)
    CTEFLOAT        reduce using rule 3 (neuralmainjump -> .)
    CTECHAR         reduce using rule 3 (neuralmainjump -> .)

    neuralmainjump                 shift and go to state 43

state 36

    (25) funcparam -> LEFTPAR parameters . RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules

    RIGHTPAR        shift and go to state 44


state 37

    (31) parameters -> typing . COLON neuralinsertparam idarray mulparams

    COLON           shift and go to state 45


state 38

    (32) parameters -> empty .

    RIGHTPAR        reduce using rule 32 (parameters -> empty .)


state 39

    (6) vars -> typing COLON neuralinsertvar varsarr varsmul . vars
    (6) vars -> . typing COLON neuralinsertvar varsarr varsmul vars
    (7) vars -> . empty
    (19) typing -> . INT
    (20) typing -> . FLOAT
    (21) typing -> . CHAR
    (137) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    FUNCTION        reduce using rule 137 (empty -> .)
    MAIN            reduce using rule 137 (empty -> .)
    LEFTBR          reduce using rule 137 (empty -> .)

    typing                         shift and go to state 13
    vars                           shift and go to state 46
    empty                          shift and go to state 14

state 40

    (9) varsmul -> SEMICOLON .

    INT             reduce using rule 9 (varsmul -> SEMICOLON .)
    FLOAT           reduce using rule 9 (varsmul -> SEMICOLON .)
    CHAR            reduce using rule 9 (varsmul -> SEMICOLON .)
    FUNCTION        reduce using rule 9 (varsmul -> SEMICOLON .)
    MAIN            reduce using rule 9 (varsmul -> SEMICOLON .)
    LEFTBR          reduce using rule 9 (varsmul -> SEMICOLON .)


state 41

    (10) varsmul -> COMMA . neuralinsertvar varsarr varsmul
    (8) neuralinsertvar -> . ID

    ID              shift and go to state 27

    neuralinsertvar                shift and go to state 47

state 42

    (11) varsarr -> neuralinitdim CTEINT . neuralenddim
    (13) neuralenddim -> . RIGHTSQR

    RIGHTSQR        shift and go to state 49

    neuralenddim                   shift and go to state 48

state 43

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump . statutes RIGHTBR
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    statutes                       shift and go to state 51
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 44

    (25) funcparam -> LEFTPAR parameters RIGHTPAR . SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules

    SEMICOLON       shift and go to state 91


state 45

    (31) parameters -> typing COLON . neuralinsertparam idarray mulparams
    (33) neuralinsertparam -> . ID

    ID              shift and go to state 93

    neuralinsertparam              shift and go to state 92

state 46

    (6) vars -> typing COLON neuralinsertvar varsarr varsmul vars .

    FUNCTION        reduce using rule 6 (vars -> typing COLON neuralinsertvar varsarr varsmul vars .)
    MAIN            reduce using rule 6 (vars -> typing COLON neuralinsertvar varsarr varsmul vars .)
    LEFTBR          reduce using rule 6 (vars -> typing COLON neuralinsertvar varsarr varsmul vars .)


state 47

    (10) varsmul -> COMMA neuralinsertvar . varsarr varsmul
    (11) varsarr -> . neuralinitdim CTEINT neuralenddim
    (12) varsarr -> . empty
    (14) neuralinitdim -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 34
    SEMICOLON       reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)

    varsarr                        shift and go to state 94
    neuralinitdim                  shift and go to state 32
    empty                          shift and go to state 33

state 48

    (11) varsarr -> neuralinitdim CTEINT neuralenddim .

    SEMICOLON       reduce using rule 11 (varsarr -> neuralinitdim CTEINT neuralenddim .)
    COMMA           reduce using rule 11 (varsarr -> neuralinitdim CTEINT neuralenddim .)


state 49

    (13) neuralenddim -> RIGHTSQR .

    SEMICOLON       reduce using rule 13 (neuralenddim -> RIGHTSQR .)
    COMMA           reduce using rule 13 (neuralenddim -> RIGHTSQR .)


state 50

    (119) addbottom -> LEFTPAR .

    LEFTPAR         reduce using rule 119 (addbottom -> LEFTPAR .)
    CTEINT          reduce using rule 119 (addbottom -> LEFTPAR .)
    CTEFLOAT        reduce using rule 119 (addbottom -> LEFTPAR .)
    CTECHAR         reduce using rule 119 (addbottom -> LEFTPAR .)
    ID              reduce using rule 119 (addbottom -> LEFTPAR .)


state 51

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes . RIGHTBR

    RIGHTBR         shift and go to state 95


state 52

    (36) statutes -> assign . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    assign                         shift and go to state 52
    statuteaux                     shift and go to state 96
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 53

    (37) statutes -> reading . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    reading                        shift and go to state 53
    statuteaux                     shift and go to state 99
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 54

    (38) statutes -> writing . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    writing                        shift and go to state 54
    statuteaux                     shift and go to state 100
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 55

    (39) statutes -> returning . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    returning                      shift and go to state 55
    statuteaux                     shift and go to state 101
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 56

    (40) statutes -> ifing . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    ifing                          shift and go to state 56
    statuteaux                     shift and go to state 102
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 57

    (41) statutes -> whiling . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    whiling                        shift and go to state 57
    statuteaux                     shift and go to state 103
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 58

    (42) statutes -> foring . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    foring                         shift and go to state 58
    statuteaux                     shift and go to state 104
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 59

    (43) statutes -> exp . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    exp                            shift and go to state 59
    statuteaux                     shift and go to state 105
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 60

    (44) statutes -> media . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    media                          shift and go to state 60
    statuteaux                     shift and go to state 106
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 61

    (45) statutes -> plotxy . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    plotxy                         shift and go to state 61
    statuteaux                     shift and go to state 107
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 62

    (46) statutes -> mediana . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    mediana                        shift and go to state 62
    statuteaux                     shift and go to state 108
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 63

    (47) statutes -> moda . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    moda                           shift and go to state 63
    statuteaux                     shift and go to state 109
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 64

    (48) statutes -> variance . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    variance                       shift and go to state 64
    statuteaux                     shift and go to state 110
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 65

    (49) statutes -> stdev . statuteaux
    (50) statuteaux -> . statutes
    (51) statuteaux -> . empty
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (137) empty -> .
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTBR         reduce using rule 137 (empty -> .)
    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    stdev                          shift and go to state 65
    statuteaux                     shift and go to state 111
    statutes                       shift and go to state 97
    empty                          shift and go to state 98
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 66

    (64) assign -> neuralassign . idarray neuralassign2 assignexp SEMICOLON
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 115
    EQUAL           reduce using rule 137 (empty -> .)

    idarray                        shift and go to state 112
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 67

    (69) reading -> READ . LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 116


state 68

    (73) writing -> WRITE . LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 117


state 69

    (68) returning -> RETURN . LEFTPAR exp RIGHTPAR SEMICOLON

    LEFTPAR         shift and go to state 118


state 70

    (80) ifing -> IF . LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing

    LEFTPAR         shift and go to state 119


state 71

    (85) whiling -> neuralwhile . LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR

    LEFTPAR         shift and go to state 120


state 72

    (88) foring -> FOR . neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (89) neuralfor -> . ID

    ID              shift and go to state 122

    neuralfor                      shift and go to state 121

state 73

    (92) exp -> andexp . exp1
    (93) exp1 -> . OR exp
    (94) exp1 -> . empty
    (137) empty -> .

    OR              shift and go to state 124
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

    exp1                           shift and go to state 123
    empty                          shift and go to state 125

state 74

    (52) media -> MEDIA . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 126


state 75

    (57) plotxy -> PLOTXY . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 127


state 76

    (53) mediana -> MEDIANA . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 128


state 77

    (54) moda -> MODA . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 129


state 78

    (56) variance -> VARIANZA . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 130


state 79

    (55) stdev -> STDEV . LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON

    LEFTPAR         shift and go to state 131


state 80

    (65) neuralassign -> ID .
    (126) cteexp -> ID . neuralexist paramsexp
    (127) neuralexist -> .

  ! reduce/reduce conflict for LEFTSQR resolved using rule 65 (neuralassign -> ID .)
    LEFTSQR         reduce using rule 65 (neuralassign -> ID .)
    EQUAL           reduce using rule 65 (neuralassign -> ID .)
    LEFTPAR         reduce using rule 127 (neuralexist -> .)
    TIMES           reduce using rule 127 (neuralexist -> .)
    DIVIDE          reduce using rule 127 (neuralexist -> .)
    PLUS            reduce using rule 127 (neuralexist -> .)
    REST            reduce using rule 127 (neuralexist -> .)
    GREATER         reduce using rule 127 (neuralexist -> .)
    GREATERAND      reduce using rule 127 (neuralexist -> .)
    LESSER          reduce using rule 127 (neuralexist -> .)
    LESSERAND       reduce using rule 127 (neuralexist -> .)
    SAME            reduce using rule 127 (neuralexist -> .)
    NOTSAME         reduce using rule 127 (neuralexist -> .)
    NOT             reduce using rule 127 (neuralexist -> .)
    AND             reduce using rule 127 (neuralexist -> .)
    OR              reduce using rule 127 (neuralexist -> .)
    READ            reduce using rule 127 (neuralexist -> .)
    WRITE           reduce using rule 127 (neuralexist -> .)
    RETURN          reduce using rule 127 (neuralexist -> .)
    IF              reduce using rule 127 (neuralexist -> .)
    FOR             reduce using rule 127 (neuralexist -> .)
    MEDIA           reduce using rule 127 (neuralexist -> .)
    PLOTXY          reduce using rule 127 (neuralexist -> .)
    MEDIANA         reduce using rule 127 (neuralexist -> .)
    MODA            reduce using rule 127 (neuralexist -> .)
    VARIANZA        reduce using rule 127 (neuralexist -> .)
    STDEV           reduce using rule 127 (neuralexist -> .)
    ID              reduce using rule 127 (neuralexist -> .)
    WHILE           reduce using rule 127 (neuralexist -> .)
    CTEINT          reduce using rule 127 (neuralexist -> .)
    CTEFLOAT        reduce using rule 127 (neuralexist -> .)
    CTECHAR         reduce using rule 127 (neuralexist -> .)
    RIGHTBR         reduce using rule 127 (neuralexist -> .)

  ! LEFTSQR         [ reduce using rule 127 (neuralexist -> .) ]

    neuralexist                    shift and go to state 132

state 81

    (86) neuralwhile -> WHILE .

    LEFTPAR         reduce using rule 86 (neuralwhile -> WHILE .)


state 82

    (95) andexp -> boolexp . andexp1
    (96) andexp1 -> . neuraland andexp
    (97) andexp1 -> . empty
    (98) neuraland -> . AND
    (137) empty -> .

    AND             shift and go to state 136
    OR              reduce using rule 137 (empty -> .)
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

    andexp1                        shift and go to state 133
    neuraland                      shift and go to state 134
    empty                          shift and go to state 135

state 83

    (99) boolexp -> arithexp . boolexp1
    (100) boolexp1 -> . neuralbool arithexp
    (101) boolexp1 -> . empty
    (102) neuralbool -> . GREATER
    (103) neuralbool -> . GREATERAND
    (104) neuralbool -> . LESSER
    (105) neuralbool -> . LESSERAND
    (106) neuralbool -> . SAME
    (107) neuralbool -> . NOTSAME
    (108) neuralbool -> . NOT
    (137) empty -> .

    GREATER         shift and go to state 140
    GREATERAND      shift and go to state 141
    LESSER          shift and go to state 142
    LESSERAND       shift and go to state 143
    SAME            shift and go to state 144
    NOTSAME         shift and go to state 145
    NOT             shift and go to state 146
    AND             reduce using rule 137 (empty -> .)
    OR              reduce using rule 137 (empty -> .)
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

    boolexp1                       shift and go to state 137
    neuralbool                     shift and go to state 138
    empty                          shift and go to state 139

state 84

    (109) arithexp -> geoexp . arithexp1
    (110) arithexp1 -> . neuralarith arithexp
    (111) arithexp1 -> . empty
    (112) neuralarith -> . PLUS
    (113) neuralarith -> . REST
    (137) empty -> .

    PLUS            shift and go to state 150
    REST            shift and go to state 151
    GREATER         reduce using rule 137 (empty -> .)
    GREATERAND      reduce using rule 137 (empty -> .)
    LESSER          reduce using rule 137 (empty -> .)
    LESSERAND       reduce using rule 137 (empty -> .)
    SAME            reduce using rule 137 (empty -> .)
    NOTSAME         reduce using rule 137 (empty -> .)
    NOT             reduce using rule 137 (empty -> .)
    AND             reduce using rule 137 (empty -> .)
    OR              reduce using rule 137 (empty -> .)
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

    arithexp1                      shift and go to state 147
    neuralarith                    shift and go to state 148
    empty                          shift and go to state 149

state 85

    (114) geoexp -> finexp . geoexp1
    (115) geoexp1 -> . neuralgeo geoexp
    (116) geoexp1 -> . empty
    (117) neuralgeo -> . TIMES
    (118) neuralgeo -> . DIVIDE
    (137) empty -> .

    TIMES           shift and go to state 155
    DIVIDE          shift and go to state 156
    PLUS            reduce using rule 137 (empty -> .)
    REST            reduce using rule 137 (empty -> .)
    GREATER         reduce using rule 137 (empty -> .)
    GREATERAND      reduce using rule 137 (empty -> .)
    LESSER          reduce using rule 137 (empty -> .)
    LESSERAND       reduce using rule 137 (empty -> .)
    SAME            reduce using rule 137 (empty -> .)
    NOTSAME         reduce using rule 137 (empty -> .)
    NOT             reduce using rule 137 (empty -> .)
    AND             reduce using rule 137 (empty -> .)
    OR              reduce using rule 137 (empty -> .)
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

    geoexp1                        shift and go to state 152
    neuralgeo                      shift and go to state 153
    empty                          shift and go to state 154

state 86

    (121) finexp -> addbottom . exp popbottom
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    addbottom                      shift and go to state 86
    exp                            shift and go to state 157
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    cteexp                         shift and go to state 87

state 87

    (122) finexp -> cteexp .

    TIMES           reduce using rule 122 (finexp -> cteexp .)
    DIVIDE          reduce using rule 122 (finexp -> cteexp .)
    PLUS            reduce using rule 122 (finexp -> cteexp .)
    REST            reduce using rule 122 (finexp -> cteexp .)
    GREATER         reduce using rule 122 (finexp -> cteexp .)
    GREATERAND      reduce using rule 122 (finexp -> cteexp .)
    LESSER          reduce using rule 122 (finexp -> cteexp .)
    LESSERAND       reduce using rule 122 (finexp -> cteexp .)
    SAME            reduce using rule 122 (finexp -> cteexp .)
    NOTSAME         reduce using rule 122 (finexp -> cteexp .)
    NOT             reduce using rule 122 (finexp -> cteexp .)
    AND             reduce using rule 122 (finexp -> cteexp .)
    OR              reduce using rule 122 (finexp -> cteexp .)
    READ            reduce using rule 122 (finexp -> cteexp .)
    WRITE           reduce using rule 122 (finexp -> cteexp .)
    RETURN          reduce using rule 122 (finexp -> cteexp .)
    IF              reduce using rule 122 (finexp -> cteexp .)
    FOR             reduce using rule 122 (finexp -> cteexp .)
    MEDIA           reduce using rule 122 (finexp -> cteexp .)
    PLOTXY          reduce using rule 122 (finexp -> cteexp .)
    MEDIANA         reduce using rule 122 (finexp -> cteexp .)
    MODA            reduce using rule 122 (finexp -> cteexp .)
    VARIANZA        reduce using rule 122 (finexp -> cteexp .)
    STDEV           reduce using rule 122 (finexp -> cteexp .)
    ID              reduce using rule 122 (finexp -> cteexp .)
    WHILE           reduce using rule 122 (finexp -> cteexp .)
    LEFTPAR         reduce using rule 122 (finexp -> cteexp .)
    CTEINT          reduce using rule 122 (finexp -> cteexp .)
    CTEFLOAT        reduce using rule 122 (finexp -> cteexp .)
    CTECHAR         reduce using rule 122 (finexp -> cteexp .)
    RIGHTBR         reduce using rule 122 (finexp -> cteexp .)
    RIGHTPAR        reduce using rule 122 (finexp -> cteexp .)
    RIGHTSQR        reduce using rule 122 (finexp -> cteexp .)
    COMMA           reduce using rule 122 (finexp -> cteexp .)
    SEMICOLON       reduce using rule 122 (finexp -> cteexp .)
    TO              reduce using rule 122 (finexp -> cteexp .)
    DO              reduce using rule 122 (finexp -> cteexp .)


state 88

    (123) cteexp -> CTEINT .

    TIMES           reduce using rule 123 (cteexp -> CTEINT .)
    DIVIDE          reduce using rule 123 (cteexp -> CTEINT .)
    PLUS            reduce using rule 123 (cteexp -> CTEINT .)
    REST            reduce using rule 123 (cteexp -> CTEINT .)
    GREATER         reduce using rule 123 (cteexp -> CTEINT .)
    GREATERAND      reduce using rule 123 (cteexp -> CTEINT .)
    LESSER          reduce using rule 123 (cteexp -> CTEINT .)
    LESSERAND       reduce using rule 123 (cteexp -> CTEINT .)
    SAME            reduce using rule 123 (cteexp -> CTEINT .)
    NOTSAME         reduce using rule 123 (cteexp -> CTEINT .)
    NOT             reduce using rule 123 (cteexp -> CTEINT .)
    AND             reduce using rule 123 (cteexp -> CTEINT .)
    OR              reduce using rule 123 (cteexp -> CTEINT .)
    READ            reduce using rule 123 (cteexp -> CTEINT .)
    WRITE           reduce using rule 123 (cteexp -> CTEINT .)
    RETURN          reduce using rule 123 (cteexp -> CTEINT .)
    IF              reduce using rule 123 (cteexp -> CTEINT .)
    FOR             reduce using rule 123 (cteexp -> CTEINT .)
    MEDIA           reduce using rule 123 (cteexp -> CTEINT .)
    PLOTXY          reduce using rule 123 (cteexp -> CTEINT .)
    MEDIANA         reduce using rule 123 (cteexp -> CTEINT .)
    MODA            reduce using rule 123 (cteexp -> CTEINT .)
    VARIANZA        reduce using rule 123 (cteexp -> CTEINT .)
    STDEV           reduce using rule 123 (cteexp -> CTEINT .)
    ID              reduce using rule 123 (cteexp -> CTEINT .)
    WHILE           reduce using rule 123 (cteexp -> CTEINT .)
    LEFTPAR         reduce using rule 123 (cteexp -> CTEINT .)
    CTEINT          reduce using rule 123 (cteexp -> CTEINT .)
    CTEFLOAT        reduce using rule 123 (cteexp -> CTEINT .)
    CTECHAR         reduce using rule 123 (cteexp -> CTEINT .)
    RIGHTBR         reduce using rule 123 (cteexp -> CTEINT .)
    RIGHTPAR        reduce using rule 123 (cteexp -> CTEINT .)
    RIGHTSQR        reduce using rule 123 (cteexp -> CTEINT .)
    COMMA           reduce using rule 123 (cteexp -> CTEINT .)
    SEMICOLON       reduce using rule 123 (cteexp -> CTEINT .)
    TO              reduce using rule 123 (cteexp -> CTEINT .)
    DO              reduce using rule 123 (cteexp -> CTEINT .)


state 89

    (124) cteexp -> CTEFLOAT .

    TIMES           reduce using rule 124 (cteexp -> CTEFLOAT .)
    DIVIDE          reduce using rule 124 (cteexp -> CTEFLOAT .)
    PLUS            reduce using rule 124 (cteexp -> CTEFLOAT .)
    REST            reduce using rule 124 (cteexp -> CTEFLOAT .)
    GREATER         reduce using rule 124 (cteexp -> CTEFLOAT .)
    GREATERAND      reduce using rule 124 (cteexp -> CTEFLOAT .)
    LESSER          reduce using rule 124 (cteexp -> CTEFLOAT .)
    LESSERAND       reduce using rule 124 (cteexp -> CTEFLOAT .)
    SAME            reduce using rule 124 (cteexp -> CTEFLOAT .)
    NOTSAME         reduce using rule 124 (cteexp -> CTEFLOAT .)
    NOT             reduce using rule 124 (cteexp -> CTEFLOAT .)
    AND             reduce using rule 124 (cteexp -> CTEFLOAT .)
    OR              reduce using rule 124 (cteexp -> CTEFLOAT .)
    READ            reduce using rule 124 (cteexp -> CTEFLOAT .)
    WRITE           reduce using rule 124 (cteexp -> CTEFLOAT .)
    RETURN          reduce using rule 124 (cteexp -> CTEFLOAT .)
    IF              reduce using rule 124 (cteexp -> CTEFLOAT .)
    FOR             reduce using rule 124 (cteexp -> CTEFLOAT .)
    MEDIA           reduce using rule 124 (cteexp -> CTEFLOAT .)
    PLOTXY          reduce using rule 124 (cteexp -> CTEFLOAT .)
    MEDIANA         reduce using rule 124 (cteexp -> CTEFLOAT .)
    MODA            reduce using rule 124 (cteexp -> CTEFLOAT .)
    VARIANZA        reduce using rule 124 (cteexp -> CTEFLOAT .)
    STDEV           reduce using rule 124 (cteexp -> CTEFLOAT .)
    ID              reduce using rule 124 (cteexp -> CTEFLOAT .)
    WHILE           reduce using rule 124 (cteexp -> CTEFLOAT .)
    LEFTPAR         reduce using rule 124 (cteexp -> CTEFLOAT .)
    CTEINT          reduce using rule 124 (cteexp -> CTEFLOAT .)
    CTEFLOAT        reduce using rule 124 (cteexp -> CTEFLOAT .)
    CTECHAR         reduce using rule 124 (cteexp -> CTEFLOAT .)
    RIGHTBR         reduce using rule 124 (cteexp -> CTEFLOAT .)
    RIGHTPAR        reduce using rule 124 (cteexp -> CTEFLOAT .)
    RIGHTSQR        reduce using rule 124 (cteexp -> CTEFLOAT .)
    COMMA           reduce using rule 124 (cteexp -> CTEFLOAT .)
    SEMICOLON       reduce using rule 124 (cteexp -> CTEFLOAT .)
    TO              reduce using rule 124 (cteexp -> CTEFLOAT .)
    DO              reduce using rule 124 (cteexp -> CTEFLOAT .)


state 90

    (125) cteexp -> CTECHAR .

    TIMES           reduce using rule 125 (cteexp -> CTECHAR .)
    DIVIDE          reduce using rule 125 (cteexp -> CTECHAR .)
    PLUS            reduce using rule 125 (cteexp -> CTECHAR .)
    REST            reduce using rule 125 (cteexp -> CTECHAR .)
    GREATER         reduce using rule 125 (cteexp -> CTECHAR .)
    GREATERAND      reduce using rule 125 (cteexp -> CTECHAR .)
    LESSER          reduce using rule 125 (cteexp -> CTECHAR .)
    LESSERAND       reduce using rule 125 (cteexp -> CTECHAR .)
    SAME            reduce using rule 125 (cteexp -> CTECHAR .)
    NOTSAME         reduce using rule 125 (cteexp -> CTECHAR .)
    NOT             reduce using rule 125 (cteexp -> CTECHAR .)
    AND             reduce using rule 125 (cteexp -> CTECHAR .)
    OR              reduce using rule 125 (cteexp -> CTECHAR .)
    READ            reduce using rule 125 (cteexp -> CTECHAR .)
    WRITE           reduce using rule 125 (cteexp -> CTECHAR .)
    RETURN          reduce using rule 125 (cteexp -> CTECHAR .)
    IF              reduce using rule 125 (cteexp -> CTECHAR .)
    FOR             reduce using rule 125 (cteexp -> CTECHAR .)
    MEDIA           reduce using rule 125 (cteexp -> CTECHAR .)
    PLOTXY          reduce using rule 125 (cteexp -> CTECHAR .)
    MEDIANA         reduce using rule 125 (cteexp -> CTECHAR .)
    MODA            reduce using rule 125 (cteexp -> CTECHAR .)
    VARIANZA        reduce using rule 125 (cteexp -> CTECHAR .)
    STDEV           reduce using rule 125 (cteexp -> CTECHAR .)
    ID              reduce using rule 125 (cteexp -> CTECHAR .)
    WHILE           reduce using rule 125 (cteexp -> CTECHAR .)
    LEFTPAR         reduce using rule 125 (cteexp -> CTECHAR .)
    CTEINT          reduce using rule 125 (cteexp -> CTECHAR .)
    CTEFLOAT        reduce using rule 125 (cteexp -> CTECHAR .)
    CTECHAR         reduce using rule 125 (cteexp -> CTECHAR .)
    RIGHTBR         reduce using rule 125 (cteexp -> CTECHAR .)
    RIGHTPAR        reduce using rule 125 (cteexp -> CTECHAR .)
    RIGHTSQR        reduce using rule 125 (cteexp -> CTECHAR .)
    COMMA           reduce using rule 125 (cteexp -> CTECHAR .)
    SEMICOLON       reduce using rule 125 (cteexp -> CTECHAR .)
    TO              reduce using rule 125 (cteexp -> CTECHAR .)
    DO              reduce using rule 125 (cteexp -> CTECHAR .)


state 91

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON . varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules
    (4) varsgl -> . VARS vars
    (5) varsgl -> . empty
    (137) empty -> .

    VARS            shift and go to state 6
    LEFTBR          reduce using rule 137 (empty -> .)

    varsgl                         shift and go to state 159
    empty                          shift and go to state 7

state 92

    (31) parameters -> typing COLON neuralinsertparam . idarray mulparams
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 115
    COMMA           reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)

    idarray                        shift and go to state 160
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 93

    (33) neuralinsertparam -> ID .

    LEFTSQR         reduce using rule 33 (neuralinsertparam -> ID .)
    COMMA           reduce using rule 33 (neuralinsertparam -> ID .)
    RIGHTPAR        reduce using rule 33 (neuralinsertparam -> ID .)


state 94

    (10) varsmul -> COMMA neuralinsertvar varsarr . varsmul
    (9) varsmul -> . SEMICOLON
    (10) varsmul -> . COMMA neuralinsertvar varsarr varsmul

    SEMICOLON       shift and go to state 40
    COMMA           shift and go to state 41

    varsmul                        shift and go to state 161

state 95

    (1) program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR .

    $end            reduce using rule 1 (program -> PROGRAM neuraladdfuncdir varsgl modules MAIN LEFTPAR RIGHTPAR LEFTBR neuralmainjump statutes RIGHTBR .)


state 96

    (36) statutes -> assign statuteaux .

    RIGHTBR         reduce using rule 36 (statutes -> assign statuteaux .)


state 97

    (50) statuteaux -> statutes .

    RIGHTBR         reduce using rule 50 (statuteaux -> statutes .)


state 98

    (51) statuteaux -> empty .

    RIGHTBR         reduce using rule 51 (statuteaux -> empty .)


state 99

    (37) statutes -> reading statuteaux .

    RIGHTBR         reduce using rule 37 (statutes -> reading statuteaux .)


state 100

    (38) statutes -> writing statuteaux .

    RIGHTBR         reduce using rule 38 (statutes -> writing statuteaux .)


state 101

    (39) statutes -> returning statuteaux .

    RIGHTBR         reduce using rule 39 (statutes -> returning statuteaux .)


state 102

    (40) statutes -> ifing statuteaux .

    RIGHTBR         reduce using rule 40 (statutes -> ifing statuteaux .)


state 103

    (41) statutes -> whiling statuteaux .

    RIGHTBR         reduce using rule 41 (statutes -> whiling statuteaux .)


state 104

    (42) statutes -> foring statuteaux .

    RIGHTBR         reduce using rule 42 (statutes -> foring statuteaux .)


state 105

    (43) statutes -> exp statuteaux .

    RIGHTBR         reduce using rule 43 (statutes -> exp statuteaux .)


state 106

    (44) statutes -> media statuteaux .

    RIGHTBR         reduce using rule 44 (statutes -> media statuteaux .)


state 107

    (45) statutes -> plotxy statuteaux .

    RIGHTBR         reduce using rule 45 (statutes -> plotxy statuteaux .)


state 108

    (46) statutes -> mediana statuteaux .

    RIGHTBR         reduce using rule 46 (statutes -> mediana statuteaux .)


state 109

    (47) statutes -> moda statuteaux .

    RIGHTBR         reduce using rule 47 (statutes -> moda statuteaux .)


state 110

    (48) statutes -> variance statuteaux .

    RIGHTBR         reduce using rule 48 (statutes -> variance statuteaux .)


state 111

    (49) statutes -> stdev statuteaux .

    RIGHTBR         reduce using rule 49 (statutes -> stdev statuteaux .)


state 112

    (64) assign -> neuralassign idarray . neuralassign2 assignexp SEMICOLON
    (66) neuralassign2 -> . EQUAL

    EQUAL           shift and go to state 163

    neuralassign2                  shift and go to state 162

state 113

    (15) idarray -> neuralinitarray . exp verify RIGHTSQR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 164
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 114

    (16) idarray -> empty .

    EQUAL           reduce using rule 16 (idarray -> empty .)
    COMMA           reduce using rule 16 (idarray -> empty .)
    RIGHTPAR        reduce using rule 16 (idarray -> empty .)
    TIMES           reduce using rule 16 (idarray -> empty .)
    DIVIDE          reduce using rule 16 (idarray -> empty .)
    PLUS            reduce using rule 16 (idarray -> empty .)
    REST            reduce using rule 16 (idarray -> empty .)
    GREATER         reduce using rule 16 (idarray -> empty .)
    GREATERAND      reduce using rule 16 (idarray -> empty .)
    LESSER          reduce using rule 16 (idarray -> empty .)
    LESSERAND       reduce using rule 16 (idarray -> empty .)
    SAME            reduce using rule 16 (idarray -> empty .)
    NOTSAME         reduce using rule 16 (idarray -> empty .)
    NOT             reduce using rule 16 (idarray -> empty .)
    AND             reduce using rule 16 (idarray -> empty .)
    OR              reduce using rule 16 (idarray -> empty .)
    READ            reduce using rule 16 (idarray -> empty .)
    WRITE           reduce using rule 16 (idarray -> empty .)
    RETURN          reduce using rule 16 (idarray -> empty .)
    IF              reduce using rule 16 (idarray -> empty .)
    FOR             reduce using rule 16 (idarray -> empty .)
    MEDIA           reduce using rule 16 (idarray -> empty .)
    PLOTXY          reduce using rule 16 (idarray -> empty .)
    MEDIANA         reduce using rule 16 (idarray -> empty .)
    MODA            reduce using rule 16 (idarray -> empty .)
    VARIANZA        reduce using rule 16 (idarray -> empty .)
    STDEV           reduce using rule 16 (idarray -> empty .)
    ID              reduce using rule 16 (idarray -> empty .)
    WHILE           reduce using rule 16 (idarray -> empty .)
    LEFTPAR         reduce using rule 16 (idarray -> empty .)
    CTEINT          reduce using rule 16 (idarray -> empty .)
    CTEFLOAT        reduce using rule 16 (idarray -> empty .)
    CTECHAR         reduce using rule 16 (idarray -> empty .)
    RIGHTBR         reduce using rule 16 (idarray -> empty .)
    RIGHTSQR        reduce using rule 16 (idarray -> empty .)
    SEMICOLON       reduce using rule 16 (idarray -> empty .)
    TO              reduce using rule 16 (idarray -> empty .)
    DO              reduce using rule 16 (idarray -> empty .)


state 115

    (17) neuralinitarray -> LEFTSQR .

    LEFTPAR         reduce using rule 17 (neuralinitarray -> LEFTSQR .)
    CTEINT          reduce using rule 17 (neuralinitarray -> LEFTSQR .)
    CTEFLOAT        reduce using rule 17 (neuralinitarray -> LEFTSQR .)
    CTECHAR         reduce using rule 17 (neuralinitarray -> LEFTSQR .)
    ID              reduce using rule 17 (neuralinitarray -> LEFTSQR .)


state 116

    (69) reading -> READ LEFTPAR . neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (70) neuralreadid -> . ID

    ID              shift and go to state 166

    neuralreadid                   shift and go to state 165

state 117

    (73) writing -> WRITE LEFTPAR . neuralwrite mulwrite RIGHTPAR SEMICOLON
    (74) neuralwrite -> . writetype
    (75) neuralwrite -> . exp
    (76) writetype -> . STRING
    (77) writetype -> . CTECHAR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    STRING          shift and go to state 170
    CTECHAR         shift and go to state 171
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    ID              shift and go to state 158

    neuralwrite                    shift and go to state 167
    writetype                      shift and go to state 168
    exp                            shift and go to state 169
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 118

    (68) returning -> RETURN LEFTPAR . exp RIGHTPAR SEMICOLON
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 172
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 119

    (80) ifing -> IF LEFTPAR . exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 173
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 120

    (85) whiling -> neuralwhile LEFTPAR . exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 174
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 121

    (88) foring -> FOR neuralfor . idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 115
    EQUAL           reduce using rule 137 (empty -> .)

    idarray                        shift and go to state 175
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 122

    (89) neuralfor -> ID .

    LEFTSQR         reduce using rule 89 (neuralfor -> ID .)
    EQUAL           reduce using rule 89 (neuralfor -> ID .)


state 123

    (92) exp -> andexp exp1 .

    READ            reduce using rule 92 (exp -> andexp exp1 .)
    WRITE           reduce using rule 92 (exp -> andexp exp1 .)
    RETURN          reduce using rule 92 (exp -> andexp exp1 .)
    IF              reduce using rule 92 (exp -> andexp exp1 .)
    FOR             reduce using rule 92 (exp -> andexp exp1 .)
    MEDIA           reduce using rule 92 (exp -> andexp exp1 .)
    PLOTXY          reduce using rule 92 (exp -> andexp exp1 .)
    MEDIANA         reduce using rule 92 (exp -> andexp exp1 .)
    MODA            reduce using rule 92 (exp -> andexp exp1 .)
    VARIANZA        reduce using rule 92 (exp -> andexp exp1 .)
    STDEV           reduce using rule 92 (exp -> andexp exp1 .)
    ID              reduce using rule 92 (exp -> andexp exp1 .)
    WHILE           reduce using rule 92 (exp -> andexp exp1 .)
    LEFTPAR         reduce using rule 92 (exp -> andexp exp1 .)
    CTEINT          reduce using rule 92 (exp -> andexp exp1 .)
    CTEFLOAT        reduce using rule 92 (exp -> andexp exp1 .)
    CTECHAR         reduce using rule 92 (exp -> andexp exp1 .)
    RIGHTBR         reduce using rule 92 (exp -> andexp exp1 .)
    RIGHTPAR        reduce using rule 92 (exp -> andexp exp1 .)
    RIGHTSQR        reduce using rule 92 (exp -> andexp exp1 .)
    COMMA           reduce using rule 92 (exp -> andexp exp1 .)
    SEMICOLON       reduce using rule 92 (exp -> andexp exp1 .)
    TO              reduce using rule 92 (exp -> andexp exp1 .)
    DO              reduce using rule 92 (exp -> andexp exp1 .)


state 124

    (93) exp1 -> OR . exp
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 176
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 125

    (94) exp1 -> empty .

    READ            reduce using rule 94 (exp1 -> empty .)
    WRITE           reduce using rule 94 (exp1 -> empty .)
    RETURN          reduce using rule 94 (exp1 -> empty .)
    IF              reduce using rule 94 (exp1 -> empty .)
    FOR             reduce using rule 94 (exp1 -> empty .)
    MEDIA           reduce using rule 94 (exp1 -> empty .)
    PLOTXY          reduce using rule 94 (exp1 -> empty .)
    MEDIANA         reduce using rule 94 (exp1 -> empty .)
    MODA            reduce using rule 94 (exp1 -> empty .)
    VARIANZA        reduce using rule 94 (exp1 -> empty .)
    STDEV           reduce using rule 94 (exp1 -> empty .)
    ID              reduce using rule 94 (exp1 -> empty .)
    WHILE           reduce using rule 94 (exp1 -> empty .)
    LEFTPAR         reduce using rule 94 (exp1 -> empty .)
    CTEINT          reduce using rule 94 (exp1 -> empty .)
    CTEFLOAT        reduce using rule 94 (exp1 -> empty .)
    CTECHAR         reduce using rule 94 (exp1 -> empty .)
    RIGHTBR         reduce using rule 94 (exp1 -> empty .)
    RIGHTPAR        reduce using rule 94 (exp1 -> empty .)
    RIGHTSQR        reduce using rule 94 (exp1 -> empty .)
    COMMA           reduce using rule 94 (exp1 -> empty .)
    SEMICOLON       reduce using rule 94 (exp1 -> empty .)
    TO              reduce using rule 94 (exp1 -> empty .)
    DO              reduce using rule 94 (exp1 -> empty .)


state 126

    (52) media -> MEDIA LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 177

state 127

    (57) plotxy -> PLOTXY LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 180

state 128

    (53) mediana -> MEDIANA LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 181

state 129

    (54) moda -> MODA LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 182

state 130

    (56) variance -> VARIANZA LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 183

state 131

    (55) stdev -> STDEV LEFTPAR . specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 184

state 132

    (126) cteexp -> ID neuralexist . paramsexp
    (128) paramsexp -> . LEFTPAR neuralera paramsexp2 neuralpar
    (129) paramsexp -> . idarray
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

  ! shift/reduce conflict for LEFTPAR resolved as shift
    LEFTPAR         shift and go to state 186
    LEFTSQR         shift and go to state 115
    TIMES           reduce using rule 137 (empty -> .)
    DIVIDE          reduce using rule 137 (empty -> .)
    PLUS            reduce using rule 137 (empty -> .)
    REST            reduce using rule 137 (empty -> .)
    GREATER         reduce using rule 137 (empty -> .)
    GREATERAND      reduce using rule 137 (empty -> .)
    LESSER          reduce using rule 137 (empty -> .)
    LESSERAND       reduce using rule 137 (empty -> .)
    SAME            reduce using rule 137 (empty -> .)
    NOTSAME         reduce using rule 137 (empty -> .)
    NOT             reduce using rule 137 (empty -> .)
    AND             reduce using rule 137 (empty -> .)
    OR              reduce using rule 137 (empty -> .)
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)
    RIGHTSQR        reduce using rule 137 (empty -> .)
    COMMA           reduce using rule 137 (empty -> .)
    SEMICOLON       reduce using rule 137 (empty -> .)
    TO              reduce using rule 137 (empty -> .)
    DO              reduce using rule 137 (empty -> .)

  ! LEFTPAR         [ reduce using rule 137 (empty -> .) ]

    paramsexp                      shift and go to state 185
    idarray                        shift and go to state 187
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 133

    (95) andexp -> boolexp andexp1 .

    OR              reduce using rule 95 (andexp -> boolexp andexp1 .)
    READ            reduce using rule 95 (andexp -> boolexp andexp1 .)
    WRITE           reduce using rule 95 (andexp -> boolexp andexp1 .)
    RETURN          reduce using rule 95 (andexp -> boolexp andexp1 .)
    IF              reduce using rule 95 (andexp -> boolexp andexp1 .)
    FOR             reduce using rule 95 (andexp -> boolexp andexp1 .)
    MEDIA           reduce using rule 95 (andexp -> boolexp andexp1 .)
    PLOTXY          reduce using rule 95 (andexp -> boolexp andexp1 .)
    MEDIANA         reduce using rule 95 (andexp -> boolexp andexp1 .)
    MODA            reduce using rule 95 (andexp -> boolexp andexp1 .)
    VARIANZA        reduce using rule 95 (andexp -> boolexp andexp1 .)
    STDEV           reduce using rule 95 (andexp -> boolexp andexp1 .)
    ID              reduce using rule 95 (andexp -> boolexp andexp1 .)
    WHILE           reduce using rule 95 (andexp -> boolexp andexp1 .)
    LEFTPAR         reduce using rule 95 (andexp -> boolexp andexp1 .)
    CTEINT          reduce using rule 95 (andexp -> boolexp andexp1 .)
    CTEFLOAT        reduce using rule 95 (andexp -> boolexp andexp1 .)
    CTECHAR         reduce using rule 95 (andexp -> boolexp andexp1 .)
    RIGHTBR         reduce using rule 95 (andexp -> boolexp andexp1 .)
    RIGHTPAR        reduce using rule 95 (andexp -> boolexp andexp1 .)
    RIGHTSQR        reduce using rule 95 (andexp -> boolexp andexp1 .)
    COMMA           reduce using rule 95 (andexp -> boolexp andexp1 .)
    SEMICOLON       reduce using rule 95 (andexp -> boolexp andexp1 .)
    TO              reduce using rule 95 (andexp -> boolexp andexp1 .)
    DO              reduce using rule 95 (andexp -> boolexp andexp1 .)


state 134

    (96) andexp1 -> neuraland . andexp
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    andexp                         shift and go to state 188
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 135

    (97) andexp1 -> empty .

    OR              reduce using rule 97 (andexp1 -> empty .)
    READ            reduce using rule 97 (andexp1 -> empty .)
    WRITE           reduce using rule 97 (andexp1 -> empty .)
    RETURN          reduce using rule 97 (andexp1 -> empty .)
    IF              reduce using rule 97 (andexp1 -> empty .)
    FOR             reduce using rule 97 (andexp1 -> empty .)
    MEDIA           reduce using rule 97 (andexp1 -> empty .)
    PLOTXY          reduce using rule 97 (andexp1 -> empty .)
    MEDIANA         reduce using rule 97 (andexp1 -> empty .)
    MODA            reduce using rule 97 (andexp1 -> empty .)
    VARIANZA        reduce using rule 97 (andexp1 -> empty .)
    STDEV           reduce using rule 97 (andexp1 -> empty .)
    ID              reduce using rule 97 (andexp1 -> empty .)
    WHILE           reduce using rule 97 (andexp1 -> empty .)
    LEFTPAR         reduce using rule 97 (andexp1 -> empty .)
    CTEINT          reduce using rule 97 (andexp1 -> empty .)
    CTEFLOAT        reduce using rule 97 (andexp1 -> empty .)
    CTECHAR         reduce using rule 97 (andexp1 -> empty .)
    RIGHTBR         reduce using rule 97 (andexp1 -> empty .)
    RIGHTPAR        reduce using rule 97 (andexp1 -> empty .)
    RIGHTSQR        reduce using rule 97 (andexp1 -> empty .)
    COMMA           reduce using rule 97 (andexp1 -> empty .)
    SEMICOLON       reduce using rule 97 (andexp1 -> empty .)
    TO              reduce using rule 97 (andexp1 -> empty .)
    DO              reduce using rule 97 (andexp1 -> empty .)


state 136

    (98) neuraland -> AND .

    LEFTPAR         reduce using rule 98 (neuraland -> AND .)
    CTEINT          reduce using rule 98 (neuraland -> AND .)
    CTEFLOAT        reduce using rule 98 (neuraland -> AND .)
    CTECHAR         reduce using rule 98 (neuraland -> AND .)
    ID              reduce using rule 98 (neuraland -> AND .)


state 137

    (99) boolexp -> arithexp boolexp1 .

    AND             reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    OR              reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    READ            reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    WRITE           reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    RETURN          reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    IF              reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    FOR             reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    MEDIA           reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    PLOTXY          reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    MEDIANA         reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    MODA            reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    VARIANZA        reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    STDEV           reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    ID              reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    WHILE           reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    LEFTPAR         reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    CTEINT          reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    CTEFLOAT        reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    CTECHAR         reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    RIGHTBR         reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    RIGHTPAR        reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    RIGHTSQR        reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    COMMA           reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    SEMICOLON       reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    TO              reduce using rule 99 (boolexp -> arithexp boolexp1 .)
    DO              reduce using rule 99 (boolexp -> arithexp boolexp1 .)


state 138

    (100) boolexp1 -> neuralbool . arithexp
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    arithexp                       shift and go to state 189
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 139

    (101) boolexp1 -> empty .

    AND             reduce using rule 101 (boolexp1 -> empty .)
    OR              reduce using rule 101 (boolexp1 -> empty .)
    READ            reduce using rule 101 (boolexp1 -> empty .)
    WRITE           reduce using rule 101 (boolexp1 -> empty .)
    RETURN          reduce using rule 101 (boolexp1 -> empty .)
    IF              reduce using rule 101 (boolexp1 -> empty .)
    FOR             reduce using rule 101 (boolexp1 -> empty .)
    MEDIA           reduce using rule 101 (boolexp1 -> empty .)
    PLOTXY          reduce using rule 101 (boolexp1 -> empty .)
    MEDIANA         reduce using rule 101 (boolexp1 -> empty .)
    MODA            reduce using rule 101 (boolexp1 -> empty .)
    VARIANZA        reduce using rule 101 (boolexp1 -> empty .)
    STDEV           reduce using rule 101 (boolexp1 -> empty .)
    ID              reduce using rule 101 (boolexp1 -> empty .)
    WHILE           reduce using rule 101 (boolexp1 -> empty .)
    LEFTPAR         reduce using rule 101 (boolexp1 -> empty .)
    CTEINT          reduce using rule 101 (boolexp1 -> empty .)
    CTEFLOAT        reduce using rule 101 (boolexp1 -> empty .)
    CTECHAR         reduce using rule 101 (boolexp1 -> empty .)
    RIGHTBR         reduce using rule 101 (boolexp1 -> empty .)
    RIGHTPAR        reduce using rule 101 (boolexp1 -> empty .)
    RIGHTSQR        reduce using rule 101 (boolexp1 -> empty .)
    COMMA           reduce using rule 101 (boolexp1 -> empty .)
    SEMICOLON       reduce using rule 101 (boolexp1 -> empty .)
    TO              reduce using rule 101 (boolexp1 -> empty .)
    DO              reduce using rule 101 (boolexp1 -> empty .)


state 140

    (102) neuralbool -> GREATER .

    LEFTPAR         reduce using rule 102 (neuralbool -> GREATER .)
    CTEINT          reduce using rule 102 (neuralbool -> GREATER .)
    CTEFLOAT        reduce using rule 102 (neuralbool -> GREATER .)
    CTECHAR         reduce using rule 102 (neuralbool -> GREATER .)
    ID              reduce using rule 102 (neuralbool -> GREATER .)


state 141

    (103) neuralbool -> GREATERAND .

    LEFTPAR         reduce using rule 103 (neuralbool -> GREATERAND .)
    CTEINT          reduce using rule 103 (neuralbool -> GREATERAND .)
    CTEFLOAT        reduce using rule 103 (neuralbool -> GREATERAND .)
    CTECHAR         reduce using rule 103 (neuralbool -> GREATERAND .)
    ID              reduce using rule 103 (neuralbool -> GREATERAND .)


state 142

    (104) neuralbool -> LESSER .

    LEFTPAR         reduce using rule 104 (neuralbool -> LESSER .)
    CTEINT          reduce using rule 104 (neuralbool -> LESSER .)
    CTEFLOAT        reduce using rule 104 (neuralbool -> LESSER .)
    CTECHAR         reduce using rule 104 (neuralbool -> LESSER .)
    ID              reduce using rule 104 (neuralbool -> LESSER .)


state 143

    (105) neuralbool -> LESSERAND .

    LEFTPAR         reduce using rule 105 (neuralbool -> LESSERAND .)
    CTEINT          reduce using rule 105 (neuralbool -> LESSERAND .)
    CTEFLOAT        reduce using rule 105 (neuralbool -> LESSERAND .)
    CTECHAR         reduce using rule 105 (neuralbool -> LESSERAND .)
    ID              reduce using rule 105 (neuralbool -> LESSERAND .)


state 144

    (106) neuralbool -> SAME .

    LEFTPAR         reduce using rule 106 (neuralbool -> SAME .)
    CTEINT          reduce using rule 106 (neuralbool -> SAME .)
    CTEFLOAT        reduce using rule 106 (neuralbool -> SAME .)
    CTECHAR         reduce using rule 106 (neuralbool -> SAME .)
    ID              reduce using rule 106 (neuralbool -> SAME .)


state 145

    (107) neuralbool -> NOTSAME .

    LEFTPAR         reduce using rule 107 (neuralbool -> NOTSAME .)
    CTEINT          reduce using rule 107 (neuralbool -> NOTSAME .)
    CTEFLOAT        reduce using rule 107 (neuralbool -> NOTSAME .)
    CTECHAR         reduce using rule 107 (neuralbool -> NOTSAME .)
    ID              reduce using rule 107 (neuralbool -> NOTSAME .)


state 146

    (108) neuralbool -> NOT .

    LEFTPAR         reduce using rule 108 (neuralbool -> NOT .)
    CTEINT          reduce using rule 108 (neuralbool -> NOT .)
    CTEFLOAT        reduce using rule 108 (neuralbool -> NOT .)
    CTECHAR         reduce using rule 108 (neuralbool -> NOT .)
    ID              reduce using rule 108 (neuralbool -> NOT .)


state 147

    (109) arithexp -> geoexp arithexp1 .

    GREATER         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    GREATERAND      reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    LESSER          reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    LESSERAND       reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    SAME            reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    NOTSAME         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    NOT             reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    AND             reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    OR              reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    READ            reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    WRITE           reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    RETURN          reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    IF              reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    FOR             reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    MEDIA           reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    PLOTXY          reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    MEDIANA         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    MODA            reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    VARIANZA        reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    STDEV           reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    ID              reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    WHILE           reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    LEFTPAR         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    CTEINT          reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    CTEFLOAT        reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    CTECHAR         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    RIGHTBR         reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    RIGHTPAR        reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    RIGHTSQR        reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    COMMA           reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    SEMICOLON       reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    TO              reduce using rule 109 (arithexp -> geoexp arithexp1 .)
    DO              reduce using rule 109 (arithexp -> geoexp arithexp1 .)


state 148

    (110) arithexp1 -> neuralarith . arithexp
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    arithexp                       shift and go to state 190
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 149

    (111) arithexp1 -> empty .

    GREATER         reduce using rule 111 (arithexp1 -> empty .)
    GREATERAND      reduce using rule 111 (arithexp1 -> empty .)
    LESSER          reduce using rule 111 (arithexp1 -> empty .)
    LESSERAND       reduce using rule 111 (arithexp1 -> empty .)
    SAME            reduce using rule 111 (arithexp1 -> empty .)
    NOTSAME         reduce using rule 111 (arithexp1 -> empty .)
    NOT             reduce using rule 111 (arithexp1 -> empty .)
    AND             reduce using rule 111 (arithexp1 -> empty .)
    OR              reduce using rule 111 (arithexp1 -> empty .)
    READ            reduce using rule 111 (arithexp1 -> empty .)
    WRITE           reduce using rule 111 (arithexp1 -> empty .)
    RETURN          reduce using rule 111 (arithexp1 -> empty .)
    IF              reduce using rule 111 (arithexp1 -> empty .)
    FOR             reduce using rule 111 (arithexp1 -> empty .)
    MEDIA           reduce using rule 111 (arithexp1 -> empty .)
    PLOTXY          reduce using rule 111 (arithexp1 -> empty .)
    MEDIANA         reduce using rule 111 (arithexp1 -> empty .)
    MODA            reduce using rule 111 (arithexp1 -> empty .)
    VARIANZA        reduce using rule 111 (arithexp1 -> empty .)
    STDEV           reduce using rule 111 (arithexp1 -> empty .)
    ID              reduce using rule 111 (arithexp1 -> empty .)
    WHILE           reduce using rule 111 (arithexp1 -> empty .)
    LEFTPAR         reduce using rule 111 (arithexp1 -> empty .)
    CTEINT          reduce using rule 111 (arithexp1 -> empty .)
    CTEFLOAT        reduce using rule 111 (arithexp1 -> empty .)
    CTECHAR         reduce using rule 111 (arithexp1 -> empty .)
    RIGHTBR         reduce using rule 111 (arithexp1 -> empty .)
    RIGHTPAR        reduce using rule 111 (arithexp1 -> empty .)
    RIGHTSQR        reduce using rule 111 (arithexp1 -> empty .)
    COMMA           reduce using rule 111 (arithexp1 -> empty .)
    SEMICOLON       reduce using rule 111 (arithexp1 -> empty .)
    TO              reduce using rule 111 (arithexp1 -> empty .)
    DO              reduce using rule 111 (arithexp1 -> empty .)


state 150

    (112) neuralarith -> PLUS .

    LEFTPAR         reduce using rule 112 (neuralarith -> PLUS .)
    CTEINT          reduce using rule 112 (neuralarith -> PLUS .)
    CTEFLOAT        reduce using rule 112 (neuralarith -> PLUS .)
    CTECHAR         reduce using rule 112 (neuralarith -> PLUS .)
    ID              reduce using rule 112 (neuralarith -> PLUS .)


state 151

    (113) neuralarith -> REST .

    LEFTPAR         reduce using rule 113 (neuralarith -> REST .)
    CTEINT          reduce using rule 113 (neuralarith -> REST .)
    CTEFLOAT        reduce using rule 113 (neuralarith -> REST .)
    CTECHAR         reduce using rule 113 (neuralarith -> REST .)
    ID              reduce using rule 113 (neuralarith -> REST .)


state 152

    (114) geoexp -> finexp geoexp1 .

    PLUS            reduce using rule 114 (geoexp -> finexp geoexp1 .)
    REST            reduce using rule 114 (geoexp -> finexp geoexp1 .)
    GREATER         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    GREATERAND      reduce using rule 114 (geoexp -> finexp geoexp1 .)
    LESSER          reduce using rule 114 (geoexp -> finexp geoexp1 .)
    LESSERAND       reduce using rule 114 (geoexp -> finexp geoexp1 .)
    SAME            reduce using rule 114 (geoexp -> finexp geoexp1 .)
    NOTSAME         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    NOT             reduce using rule 114 (geoexp -> finexp geoexp1 .)
    AND             reduce using rule 114 (geoexp -> finexp geoexp1 .)
    OR              reduce using rule 114 (geoexp -> finexp geoexp1 .)
    READ            reduce using rule 114 (geoexp -> finexp geoexp1 .)
    WRITE           reduce using rule 114 (geoexp -> finexp geoexp1 .)
    RETURN          reduce using rule 114 (geoexp -> finexp geoexp1 .)
    IF              reduce using rule 114 (geoexp -> finexp geoexp1 .)
    FOR             reduce using rule 114 (geoexp -> finexp geoexp1 .)
    MEDIA           reduce using rule 114 (geoexp -> finexp geoexp1 .)
    PLOTXY          reduce using rule 114 (geoexp -> finexp geoexp1 .)
    MEDIANA         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    MODA            reduce using rule 114 (geoexp -> finexp geoexp1 .)
    VARIANZA        reduce using rule 114 (geoexp -> finexp geoexp1 .)
    STDEV           reduce using rule 114 (geoexp -> finexp geoexp1 .)
    ID              reduce using rule 114 (geoexp -> finexp geoexp1 .)
    WHILE           reduce using rule 114 (geoexp -> finexp geoexp1 .)
    LEFTPAR         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    CTEINT          reduce using rule 114 (geoexp -> finexp geoexp1 .)
    CTEFLOAT        reduce using rule 114 (geoexp -> finexp geoexp1 .)
    CTECHAR         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    RIGHTBR         reduce using rule 114 (geoexp -> finexp geoexp1 .)
    RIGHTPAR        reduce using rule 114 (geoexp -> finexp geoexp1 .)
    RIGHTSQR        reduce using rule 114 (geoexp -> finexp geoexp1 .)
    COMMA           reduce using rule 114 (geoexp -> finexp geoexp1 .)
    SEMICOLON       reduce using rule 114 (geoexp -> finexp geoexp1 .)
    TO              reduce using rule 114 (geoexp -> finexp geoexp1 .)
    DO              reduce using rule 114 (geoexp -> finexp geoexp1 .)


state 153

    (115) geoexp1 -> neuralgeo . geoexp
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    geoexp                         shift and go to state 191
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 154

    (116) geoexp1 -> empty .

    PLUS            reduce using rule 116 (geoexp1 -> empty .)
    REST            reduce using rule 116 (geoexp1 -> empty .)
    GREATER         reduce using rule 116 (geoexp1 -> empty .)
    GREATERAND      reduce using rule 116 (geoexp1 -> empty .)
    LESSER          reduce using rule 116 (geoexp1 -> empty .)
    LESSERAND       reduce using rule 116 (geoexp1 -> empty .)
    SAME            reduce using rule 116 (geoexp1 -> empty .)
    NOTSAME         reduce using rule 116 (geoexp1 -> empty .)
    NOT             reduce using rule 116 (geoexp1 -> empty .)
    AND             reduce using rule 116 (geoexp1 -> empty .)
    OR              reduce using rule 116 (geoexp1 -> empty .)
    READ            reduce using rule 116 (geoexp1 -> empty .)
    WRITE           reduce using rule 116 (geoexp1 -> empty .)
    RETURN          reduce using rule 116 (geoexp1 -> empty .)
    IF              reduce using rule 116 (geoexp1 -> empty .)
    FOR             reduce using rule 116 (geoexp1 -> empty .)
    MEDIA           reduce using rule 116 (geoexp1 -> empty .)
    PLOTXY          reduce using rule 116 (geoexp1 -> empty .)
    MEDIANA         reduce using rule 116 (geoexp1 -> empty .)
    MODA            reduce using rule 116 (geoexp1 -> empty .)
    VARIANZA        reduce using rule 116 (geoexp1 -> empty .)
    STDEV           reduce using rule 116 (geoexp1 -> empty .)
    ID              reduce using rule 116 (geoexp1 -> empty .)
    WHILE           reduce using rule 116 (geoexp1 -> empty .)
    LEFTPAR         reduce using rule 116 (geoexp1 -> empty .)
    CTEINT          reduce using rule 116 (geoexp1 -> empty .)
    CTEFLOAT        reduce using rule 116 (geoexp1 -> empty .)
    CTECHAR         reduce using rule 116 (geoexp1 -> empty .)
    RIGHTBR         reduce using rule 116 (geoexp1 -> empty .)
    RIGHTPAR        reduce using rule 116 (geoexp1 -> empty .)
    RIGHTSQR        reduce using rule 116 (geoexp1 -> empty .)
    COMMA           reduce using rule 116 (geoexp1 -> empty .)
    SEMICOLON       reduce using rule 116 (geoexp1 -> empty .)
    TO              reduce using rule 116 (geoexp1 -> empty .)
    DO              reduce using rule 116 (geoexp1 -> empty .)


state 155

    (117) neuralgeo -> TIMES .

    LEFTPAR         reduce using rule 117 (neuralgeo -> TIMES .)
    CTEINT          reduce using rule 117 (neuralgeo -> TIMES .)
    CTEFLOAT        reduce using rule 117 (neuralgeo -> TIMES .)
    CTECHAR         reduce using rule 117 (neuralgeo -> TIMES .)
    ID              reduce using rule 117 (neuralgeo -> TIMES .)


state 156

    (118) neuralgeo -> DIVIDE .

    LEFTPAR         reduce using rule 118 (neuralgeo -> DIVIDE .)
    CTEINT          reduce using rule 118 (neuralgeo -> DIVIDE .)
    CTEFLOAT        reduce using rule 118 (neuralgeo -> DIVIDE .)
    CTECHAR         reduce using rule 118 (neuralgeo -> DIVIDE .)
    ID              reduce using rule 118 (neuralgeo -> DIVIDE .)


state 157

    (121) finexp -> addbottom exp . popbottom
    (120) popbottom -> . RIGHTPAR

    RIGHTPAR        shift and go to state 193

    popbottom                      shift and go to state 192

state 158

    (126) cteexp -> ID . neuralexist paramsexp
    (127) neuralexist -> .

    LEFTPAR         reduce using rule 127 (neuralexist -> .)
    LEFTSQR         reduce using rule 127 (neuralexist -> .)
    TIMES           reduce using rule 127 (neuralexist -> .)
    DIVIDE          reduce using rule 127 (neuralexist -> .)
    PLUS            reduce using rule 127 (neuralexist -> .)
    REST            reduce using rule 127 (neuralexist -> .)
    GREATER         reduce using rule 127 (neuralexist -> .)
    GREATERAND      reduce using rule 127 (neuralexist -> .)
    LESSER          reduce using rule 127 (neuralexist -> .)
    LESSERAND       reduce using rule 127 (neuralexist -> .)
    SAME            reduce using rule 127 (neuralexist -> .)
    NOTSAME         reduce using rule 127 (neuralexist -> .)
    NOT             reduce using rule 127 (neuralexist -> .)
    AND             reduce using rule 127 (neuralexist -> .)
    OR              reduce using rule 127 (neuralexist -> .)
    RIGHTPAR        reduce using rule 127 (neuralexist -> .)
    RIGHTSQR        reduce using rule 127 (neuralexist -> .)
    COMMA           reduce using rule 127 (neuralexist -> .)
    READ            reduce using rule 127 (neuralexist -> .)
    WRITE           reduce using rule 127 (neuralexist -> .)
    RETURN          reduce using rule 127 (neuralexist -> .)
    IF              reduce using rule 127 (neuralexist -> .)
    FOR             reduce using rule 127 (neuralexist -> .)
    MEDIA           reduce using rule 127 (neuralexist -> .)
    PLOTXY          reduce using rule 127 (neuralexist -> .)
    MEDIANA         reduce using rule 127 (neuralexist -> .)
    MODA            reduce using rule 127 (neuralexist -> .)
    VARIANZA        reduce using rule 127 (neuralexist -> .)
    STDEV           reduce using rule 127 (neuralexist -> .)
    ID              reduce using rule 127 (neuralexist -> .)
    WHILE           reduce using rule 127 (neuralexist -> .)
    CTEINT          reduce using rule 127 (neuralexist -> .)
    CTEFLOAT        reduce using rule 127 (neuralexist -> .)
    CTECHAR         reduce using rule 127 (neuralexist -> .)
    RIGHTBR         reduce using rule 127 (neuralexist -> .)
    SEMICOLON       reduce using rule 127 (neuralexist -> .)
    TO              reduce using rule 127 (neuralexist -> .)
    DO              reduce using rule 127 (neuralexist -> .)

    neuralexist                    shift and go to state 132

state 159

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl . LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules

    LEFTBR          shift and go to state 194


state 160

    (31) parameters -> typing COLON neuralinsertparam idarray . mulparams
    (34) mulparams -> . COMMA parameters
    (35) mulparams -> . empty
    (137) empty -> .

    COMMA           shift and go to state 196
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulparams                      shift and go to state 195
    empty                          shift and go to state 197

state 161

    (10) varsmul -> COMMA neuralinsertvar varsarr varsmul .

    INT             reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)
    FLOAT           reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)
    CHAR            reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)
    FUNCTION        reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)
    MAIN            reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)
    LEFTBR          reduce using rule 10 (varsmul -> COMMA neuralinsertvar varsarr varsmul .)


state 162

    (64) assign -> neuralassign idarray neuralassign2 . assignexp SEMICOLON
    (67) assignexp -> . exp
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    assignexp                      shift and go to state 198
    exp                            shift and go to state 199
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 163

    (66) neuralassign2 -> EQUAL .

    LEFTPAR         reduce using rule 66 (neuralassign2 -> EQUAL .)
    CTEINT          reduce using rule 66 (neuralassign2 -> EQUAL .)
    CTEFLOAT        reduce using rule 66 (neuralassign2 -> EQUAL .)
    CTECHAR         reduce using rule 66 (neuralassign2 -> EQUAL .)
    ID              reduce using rule 66 (neuralassign2 -> EQUAL .)


state 164

    (15) idarray -> neuralinitarray exp . verify RIGHTSQR
    (18) verify -> .

    RIGHTSQR        reduce using rule 18 (verify -> .)

    verify                         shift and go to state 200

state 165

    (69) reading -> READ LEFTPAR neuralreadid . idarray mulread RIGHTPAR SEMICOLON
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 115
    COMMA           reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)

    idarray                        shift and go to state 201
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 166

    (70) neuralreadid -> ID .

    LEFTSQR         reduce using rule 70 (neuralreadid -> ID .)
    COMMA           reduce using rule 70 (neuralreadid -> ID .)
    RIGHTPAR        reduce using rule 70 (neuralreadid -> ID .)


state 167

    (73) writing -> WRITE LEFTPAR neuralwrite . mulwrite RIGHTPAR SEMICOLON
    (78) mulwrite -> . COMMA neuralwrite mulwrite
    (79) mulwrite -> . empty
    (137) empty -> .

    COMMA           shift and go to state 203
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulwrite                       shift and go to state 202
    empty                          shift and go to state 204

state 168

    (74) neuralwrite -> writetype .

    COMMA           reduce using rule 74 (neuralwrite -> writetype .)
    RIGHTPAR        reduce using rule 74 (neuralwrite -> writetype .)


state 169

    (75) neuralwrite -> exp .

    COMMA           reduce using rule 75 (neuralwrite -> exp .)
    RIGHTPAR        reduce using rule 75 (neuralwrite -> exp .)


state 170

    (76) writetype -> STRING .

    COMMA           reduce using rule 76 (writetype -> STRING .)
    RIGHTPAR        reduce using rule 76 (writetype -> STRING .)


state 171

    (77) writetype -> CTECHAR .
    (125) cteexp -> CTECHAR .

  ! reduce/reduce conflict for COMMA resolved using rule 77 (writetype -> CTECHAR .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 77 (writetype -> CTECHAR .)
    COMMA           reduce using rule 77 (writetype -> CTECHAR .)
    RIGHTPAR        reduce using rule 77 (writetype -> CTECHAR .)
    TIMES           reduce using rule 125 (cteexp -> CTECHAR .)
    DIVIDE          reduce using rule 125 (cteexp -> CTECHAR .)
    PLUS            reduce using rule 125 (cteexp -> CTECHAR .)
    REST            reduce using rule 125 (cteexp -> CTECHAR .)
    GREATER         reduce using rule 125 (cteexp -> CTECHAR .)
    GREATERAND      reduce using rule 125 (cteexp -> CTECHAR .)
    LESSER          reduce using rule 125 (cteexp -> CTECHAR .)
    LESSERAND       reduce using rule 125 (cteexp -> CTECHAR .)
    SAME            reduce using rule 125 (cteexp -> CTECHAR .)
    NOTSAME         reduce using rule 125 (cteexp -> CTECHAR .)
    NOT             reduce using rule 125 (cteexp -> CTECHAR .)
    AND             reduce using rule 125 (cteexp -> CTECHAR .)
    OR              reduce using rule 125 (cteexp -> CTECHAR .)

  ! COMMA           [ reduce using rule 125 (cteexp -> CTECHAR .) ]
  ! RIGHTPAR        [ reduce using rule 125 (cteexp -> CTECHAR .) ]


state 172

    (68) returning -> RETURN LEFTPAR exp . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 205


state 173

    (80) ifing -> IF LEFTPAR exp . neuralif THEN LEFTBR statutes RIGHTBR elsing
    (84) neuralif -> . RIGHTPAR

    RIGHTPAR        shift and go to state 207

    neuralif                       shift and go to state 206

state 174

    (85) whiling -> neuralwhile LEFTPAR exp . neuralwhile2 DO LEFTBR statutes RIGHTBR
    (87) neuralwhile2 -> . RIGHTPAR

    RIGHTPAR        shift and go to state 209

    neuralwhile2                   shift and go to state 208

state 175

    (88) foring -> FOR neuralfor idarray . EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR

    EQUAL           shift and go to state 210


state 176

    (93) exp1 -> OR exp .

    READ            reduce using rule 93 (exp1 -> OR exp .)
    WRITE           reduce using rule 93 (exp1 -> OR exp .)
    RETURN          reduce using rule 93 (exp1 -> OR exp .)
    IF              reduce using rule 93 (exp1 -> OR exp .)
    FOR             reduce using rule 93 (exp1 -> OR exp .)
    MEDIA           reduce using rule 93 (exp1 -> OR exp .)
    PLOTXY          reduce using rule 93 (exp1 -> OR exp .)
    MEDIANA         reduce using rule 93 (exp1 -> OR exp .)
    MODA            reduce using rule 93 (exp1 -> OR exp .)
    VARIANZA        reduce using rule 93 (exp1 -> OR exp .)
    STDEV           reduce using rule 93 (exp1 -> OR exp .)
    ID              reduce using rule 93 (exp1 -> OR exp .)
    WHILE           reduce using rule 93 (exp1 -> OR exp .)
    LEFTPAR         reduce using rule 93 (exp1 -> OR exp .)
    CTEINT          reduce using rule 93 (exp1 -> OR exp .)
    CTEFLOAT        reduce using rule 93 (exp1 -> OR exp .)
    CTECHAR         reduce using rule 93 (exp1 -> OR exp .)
    RIGHTBR         reduce using rule 93 (exp1 -> OR exp .)
    RIGHTPAR        reduce using rule 93 (exp1 -> OR exp .)
    RIGHTSQR        reduce using rule 93 (exp1 -> OR exp .)
    COMMA           reduce using rule 93 (exp1 -> OR exp .)
    SEMICOLON       reduce using rule 93 (exp1 -> OR exp .)
    TO              reduce using rule 93 (exp1 -> OR exp .)
    DO              reduce using rule 93 (exp1 -> OR exp .)


state 177

    (52) media -> MEDIA LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 211


state 178

    (59) specfuncnumbers -> CTEINT . neuralnum mulnumeros
    (61) neuralnum -> .

    COMMA           reduce using rule 61 (neuralnum -> .)
    RIGHTPAR        reduce using rule 61 (neuralnum -> .)

    neuralnum                      shift and go to state 212

state 179

    (60) specfuncnumbers -> CTEFLOAT . neuralnum mulnumeros
    (61) neuralnum -> .

    COMMA           reduce using rule 61 (neuralnum -> .)
    RIGHTPAR        reduce using rule 61 (neuralnum -> .)

    neuralnum                      shift and go to state 213

state 180

    (57) plotxy -> PLOTXY LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 214


state 181

    (53) mediana -> MEDIANA LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 215


state 182

    (54) moda -> MODA LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 216


state 183

    (56) variance -> VARIANZA LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 217


state 184

    (55) stdev -> STDEV LEFTPAR specfuncnumbers . RIGHTPAR specialfunclist SEMICOLON

    RIGHTPAR        shift and go to state 218


state 185

    (126) cteexp -> ID neuralexist paramsexp .

    TIMES           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    DIVIDE          reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    PLUS            reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    REST            reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    GREATER         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    GREATERAND      reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    LESSER          reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    LESSERAND       reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    SAME            reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    NOTSAME         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    NOT             reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    AND             reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    OR              reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    READ            reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    WRITE           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    RETURN          reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    IF              reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    FOR             reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    MEDIA           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    PLOTXY          reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    MEDIANA         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    MODA            reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    VARIANZA        reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    STDEV           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    ID              reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    WHILE           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    LEFTPAR         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    CTEINT          reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    CTEFLOAT        reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    CTECHAR         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    RIGHTBR         reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    RIGHTPAR        reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    RIGHTSQR        reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    COMMA           reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    SEMICOLON       reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    TO              reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)
    DO              reduce using rule 126 (cteexp -> ID neuralexist paramsexp .)


state 186

    (128) paramsexp -> LEFTPAR . neuralera paramsexp2 neuralpar
    (133) neuralera -> .

    LEFTPAR         reduce using rule 133 (neuralera -> .)
    CTEINT          reduce using rule 133 (neuralera -> .)
    CTEFLOAT        reduce using rule 133 (neuralera -> .)
    CTECHAR         reduce using rule 133 (neuralera -> .)
    ID              reduce using rule 133 (neuralera -> .)
    RIGHTPAR        reduce using rule 133 (neuralera -> .)

    neuralera                      shift and go to state 219

state 187

    (129) paramsexp -> idarray .

    TIMES           reduce using rule 129 (paramsexp -> idarray .)
    DIVIDE          reduce using rule 129 (paramsexp -> idarray .)
    PLUS            reduce using rule 129 (paramsexp -> idarray .)
    REST            reduce using rule 129 (paramsexp -> idarray .)
    GREATER         reduce using rule 129 (paramsexp -> idarray .)
    GREATERAND      reduce using rule 129 (paramsexp -> idarray .)
    LESSER          reduce using rule 129 (paramsexp -> idarray .)
    LESSERAND       reduce using rule 129 (paramsexp -> idarray .)
    SAME            reduce using rule 129 (paramsexp -> idarray .)
    NOTSAME         reduce using rule 129 (paramsexp -> idarray .)
    NOT             reduce using rule 129 (paramsexp -> idarray .)
    AND             reduce using rule 129 (paramsexp -> idarray .)
    OR              reduce using rule 129 (paramsexp -> idarray .)
    READ            reduce using rule 129 (paramsexp -> idarray .)
    WRITE           reduce using rule 129 (paramsexp -> idarray .)
    RETURN          reduce using rule 129 (paramsexp -> idarray .)
    IF              reduce using rule 129 (paramsexp -> idarray .)
    FOR             reduce using rule 129 (paramsexp -> idarray .)
    MEDIA           reduce using rule 129 (paramsexp -> idarray .)
    PLOTXY          reduce using rule 129 (paramsexp -> idarray .)
    MEDIANA         reduce using rule 129 (paramsexp -> idarray .)
    MODA            reduce using rule 129 (paramsexp -> idarray .)
    VARIANZA        reduce using rule 129 (paramsexp -> idarray .)
    STDEV           reduce using rule 129 (paramsexp -> idarray .)
    ID              reduce using rule 129 (paramsexp -> idarray .)
    WHILE           reduce using rule 129 (paramsexp -> idarray .)
    LEFTPAR         reduce using rule 129 (paramsexp -> idarray .)
    CTEINT          reduce using rule 129 (paramsexp -> idarray .)
    CTEFLOAT        reduce using rule 129 (paramsexp -> idarray .)
    CTECHAR         reduce using rule 129 (paramsexp -> idarray .)
    RIGHTBR         reduce using rule 129 (paramsexp -> idarray .)
    RIGHTPAR        reduce using rule 129 (paramsexp -> idarray .)
    RIGHTSQR        reduce using rule 129 (paramsexp -> idarray .)
    COMMA           reduce using rule 129 (paramsexp -> idarray .)
    SEMICOLON       reduce using rule 129 (paramsexp -> idarray .)
    TO              reduce using rule 129 (paramsexp -> idarray .)
    DO              reduce using rule 129 (paramsexp -> idarray .)


state 188

    (96) andexp1 -> neuraland andexp .

    OR              reduce using rule 96 (andexp1 -> neuraland andexp .)
    READ            reduce using rule 96 (andexp1 -> neuraland andexp .)
    WRITE           reduce using rule 96 (andexp1 -> neuraland andexp .)
    RETURN          reduce using rule 96 (andexp1 -> neuraland andexp .)
    IF              reduce using rule 96 (andexp1 -> neuraland andexp .)
    FOR             reduce using rule 96 (andexp1 -> neuraland andexp .)
    MEDIA           reduce using rule 96 (andexp1 -> neuraland andexp .)
    PLOTXY          reduce using rule 96 (andexp1 -> neuraland andexp .)
    MEDIANA         reduce using rule 96 (andexp1 -> neuraland andexp .)
    MODA            reduce using rule 96 (andexp1 -> neuraland andexp .)
    VARIANZA        reduce using rule 96 (andexp1 -> neuraland andexp .)
    STDEV           reduce using rule 96 (andexp1 -> neuraland andexp .)
    ID              reduce using rule 96 (andexp1 -> neuraland andexp .)
    WHILE           reduce using rule 96 (andexp1 -> neuraland andexp .)
    LEFTPAR         reduce using rule 96 (andexp1 -> neuraland andexp .)
    CTEINT          reduce using rule 96 (andexp1 -> neuraland andexp .)
    CTEFLOAT        reduce using rule 96 (andexp1 -> neuraland andexp .)
    CTECHAR         reduce using rule 96 (andexp1 -> neuraland andexp .)
    RIGHTBR         reduce using rule 96 (andexp1 -> neuraland andexp .)
    RIGHTPAR        reduce using rule 96 (andexp1 -> neuraland andexp .)
    RIGHTSQR        reduce using rule 96 (andexp1 -> neuraland andexp .)
    COMMA           reduce using rule 96 (andexp1 -> neuraland andexp .)
    SEMICOLON       reduce using rule 96 (andexp1 -> neuraland andexp .)
    TO              reduce using rule 96 (andexp1 -> neuraland andexp .)
    DO              reduce using rule 96 (andexp1 -> neuraland andexp .)


state 189

    (100) boolexp1 -> neuralbool arithexp .

    AND             reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    OR              reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    READ            reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    WRITE           reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    RETURN          reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    IF              reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    FOR             reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    MEDIA           reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    PLOTXY          reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    MEDIANA         reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    MODA            reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    VARIANZA        reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    STDEV           reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    ID              reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    WHILE           reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    LEFTPAR         reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    CTEINT          reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    CTEFLOAT        reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    CTECHAR         reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    RIGHTBR         reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    RIGHTPAR        reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    RIGHTSQR        reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    COMMA           reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    SEMICOLON       reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    TO              reduce using rule 100 (boolexp1 -> neuralbool arithexp .)
    DO              reduce using rule 100 (boolexp1 -> neuralbool arithexp .)


state 190

    (110) arithexp1 -> neuralarith arithexp .

    GREATER         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    GREATERAND      reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    LESSER          reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    LESSERAND       reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    SAME            reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    NOTSAME         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    NOT             reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    AND             reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    OR              reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    READ            reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    WRITE           reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    RETURN          reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    IF              reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    FOR             reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    MEDIA           reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    PLOTXY          reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    MEDIANA         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    MODA            reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    VARIANZA        reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    STDEV           reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    ID              reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    WHILE           reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    LEFTPAR         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    CTEINT          reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    CTEFLOAT        reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    CTECHAR         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    RIGHTBR         reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    RIGHTPAR        reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    RIGHTSQR        reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    COMMA           reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    SEMICOLON       reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    TO              reduce using rule 110 (arithexp1 -> neuralarith arithexp .)
    DO              reduce using rule 110 (arithexp1 -> neuralarith arithexp .)


state 191

    (115) geoexp1 -> neuralgeo geoexp .

    PLUS            reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    REST            reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    GREATER         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    GREATERAND      reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    LESSER          reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    LESSERAND       reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    SAME            reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    NOTSAME         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    NOT             reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    AND             reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    OR              reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    READ            reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    WRITE           reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    RETURN          reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    IF              reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    FOR             reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    MEDIA           reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    PLOTXY          reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    MEDIANA         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    MODA            reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    VARIANZA        reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    STDEV           reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    ID              reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    WHILE           reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    LEFTPAR         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    CTEINT          reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    CTEFLOAT        reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    CTECHAR         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    RIGHTBR         reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    RIGHTPAR        reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    RIGHTSQR        reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    COMMA           reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    SEMICOLON       reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    TO              reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)
    DO              reduce using rule 115 (geoexp1 -> neuralgeo geoexp .)


state 192

    (121) finexp -> addbottom exp popbottom .

    TIMES           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    DIVIDE          reduce using rule 121 (finexp -> addbottom exp popbottom .)
    PLUS            reduce using rule 121 (finexp -> addbottom exp popbottom .)
    REST            reduce using rule 121 (finexp -> addbottom exp popbottom .)
    GREATER         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    GREATERAND      reduce using rule 121 (finexp -> addbottom exp popbottom .)
    LESSER          reduce using rule 121 (finexp -> addbottom exp popbottom .)
    LESSERAND       reduce using rule 121 (finexp -> addbottom exp popbottom .)
    SAME            reduce using rule 121 (finexp -> addbottom exp popbottom .)
    NOTSAME         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    NOT             reduce using rule 121 (finexp -> addbottom exp popbottom .)
    AND             reduce using rule 121 (finexp -> addbottom exp popbottom .)
    OR              reduce using rule 121 (finexp -> addbottom exp popbottom .)
    READ            reduce using rule 121 (finexp -> addbottom exp popbottom .)
    WRITE           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    RETURN          reduce using rule 121 (finexp -> addbottom exp popbottom .)
    IF              reduce using rule 121 (finexp -> addbottom exp popbottom .)
    FOR             reduce using rule 121 (finexp -> addbottom exp popbottom .)
    MEDIA           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    PLOTXY          reduce using rule 121 (finexp -> addbottom exp popbottom .)
    MEDIANA         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    MODA            reduce using rule 121 (finexp -> addbottom exp popbottom .)
    VARIANZA        reduce using rule 121 (finexp -> addbottom exp popbottom .)
    STDEV           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    ID              reduce using rule 121 (finexp -> addbottom exp popbottom .)
    WHILE           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    LEFTPAR         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    CTEINT          reduce using rule 121 (finexp -> addbottom exp popbottom .)
    CTEFLOAT        reduce using rule 121 (finexp -> addbottom exp popbottom .)
    CTECHAR         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    RIGHTBR         reduce using rule 121 (finexp -> addbottom exp popbottom .)
    RIGHTPAR        reduce using rule 121 (finexp -> addbottom exp popbottom .)
    RIGHTSQR        reduce using rule 121 (finexp -> addbottom exp popbottom .)
    COMMA           reduce using rule 121 (finexp -> addbottom exp popbottom .)
    SEMICOLON       reduce using rule 121 (finexp -> addbottom exp popbottom .)
    TO              reduce using rule 121 (finexp -> addbottom exp popbottom .)
    DO              reduce using rule 121 (finexp -> addbottom exp popbottom .)


state 193

    (120) popbottom -> RIGHTPAR .

    TIMES           reduce using rule 120 (popbottom -> RIGHTPAR .)
    DIVIDE          reduce using rule 120 (popbottom -> RIGHTPAR .)
    PLUS            reduce using rule 120 (popbottom -> RIGHTPAR .)
    REST            reduce using rule 120 (popbottom -> RIGHTPAR .)
    GREATER         reduce using rule 120 (popbottom -> RIGHTPAR .)
    GREATERAND      reduce using rule 120 (popbottom -> RIGHTPAR .)
    LESSER          reduce using rule 120 (popbottom -> RIGHTPAR .)
    LESSERAND       reduce using rule 120 (popbottom -> RIGHTPAR .)
    SAME            reduce using rule 120 (popbottom -> RIGHTPAR .)
    NOTSAME         reduce using rule 120 (popbottom -> RIGHTPAR .)
    NOT             reduce using rule 120 (popbottom -> RIGHTPAR .)
    AND             reduce using rule 120 (popbottom -> RIGHTPAR .)
    OR              reduce using rule 120 (popbottom -> RIGHTPAR .)
    READ            reduce using rule 120 (popbottom -> RIGHTPAR .)
    WRITE           reduce using rule 120 (popbottom -> RIGHTPAR .)
    RETURN          reduce using rule 120 (popbottom -> RIGHTPAR .)
    IF              reduce using rule 120 (popbottom -> RIGHTPAR .)
    FOR             reduce using rule 120 (popbottom -> RIGHTPAR .)
    MEDIA           reduce using rule 120 (popbottom -> RIGHTPAR .)
    PLOTXY          reduce using rule 120 (popbottom -> RIGHTPAR .)
    MEDIANA         reduce using rule 120 (popbottom -> RIGHTPAR .)
    MODA            reduce using rule 120 (popbottom -> RIGHTPAR .)
    VARIANZA        reduce using rule 120 (popbottom -> RIGHTPAR .)
    STDEV           reduce using rule 120 (popbottom -> RIGHTPAR .)
    ID              reduce using rule 120 (popbottom -> RIGHTPAR .)
    WHILE           reduce using rule 120 (popbottom -> RIGHTPAR .)
    LEFTPAR         reduce using rule 120 (popbottom -> RIGHTPAR .)
    CTEINT          reduce using rule 120 (popbottom -> RIGHTPAR .)
    CTEFLOAT        reduce using rule 120 (popbottom -> RIGHTPAR .)
    CTECHAR         reduce using rule 120 (popbottom -> RIGHTPAR .)
    RIGHTBR         reduce using rule 120 (popbottom -> RIGHTPAR .)
    RIGHTPAR        reduce using rule 120 (popbottom -> RIGHTPAR .)
    RIGHTSQR        reduce using rule 120 (popbottom -> RIGHTPAR .)
    COMMA           reduce using rule 120 (popbottom -> RIGHTPAR .)
    SEMICOLON       reduce using rule 120 (popbottom -> RIGHTPAR .)
    TO              reduce using rule 120 (popbottom -> RIGHTPAR .)
    DO              reduce using rule 120 (popbottom -> RIGHTPAR .)


state 194

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR . neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules
    (28) neuralinitfuncs -> .

    READ            reduce using rule 28 (neuralinitfuncs -> .)
    WRITE           reduce using rule 28 (neuralinitfuncs -> .)
    RETURN          reduce using rule 28 (neuralinitfuncs -> .)
    IF              reduce using rule 28 (neuralinitfuncs -> .)
    FOR             reduce using rule 28 (neuralinitfuncs -> .)
    MEDIA           reduce using rule 28 (neuralinitfuncs -> .)
    PLOTXY          reduce using rule 28 (neuralinitfuncs -> .)
    MEDIANA         reduce using rule 28 (neuralinitfuncs -> .)
    MODA            reduce using rule 28 (neuralinitfuncs -> .)
    VARIANZA        reduce using rule 28 (neuralinitfuncs -> .)
    STDEV           reduce using rule 28 (neuralinitfuncs -> .)
    ID              reduce using rule 28 (neuralinitfuncs -> .)
    WHILE           reduce using rule 28 (neuralinitfuncs -> .)
    LEFTPAR         reduce using rule 28 (neuralinitfuncs -> .)
    CTEINT          reduce using rule 28 (neuralinitfuncs -> .)
    CTEFLOAT        reduce using rule 28 (neuralinitfuncs -> .)
    CTECHAR         reduce using rule 28 (neuralinitfuncs -> .)

    neuralinitfuncs                shift and go to state 220

state 195

    (31) parameters -> typing COLON neuralinsertparam idarray mulparams .

    RIGHTPAR        reduce using rule 31 (parameters -> typing COLON neuralinsertparam idarray mulparams .)


state 196

    (34) mulparams -> COMMA . parameters
    (31) parameters -> . typing COLON neuralinsertparam idarray mulparams
    (32) parameters -> . empty
    (19) typing -> . INT
    (20) typing -> . FLOAT
    (21) typing -> . CHAR
    (137) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    RIGHTPAR        reduce using rule 137 (empty -> .)

    parameters                     shift and go to state 221
    typing                         shift and go to state 37
    empty                          shift and go to state 38

state 197

    (35) mulparams -> empty .

    RIGHTPAR        reduce using rule 35 (mulparams -> empty .)


state 198

    (64) assign -> neuralassign idarray neuralassign2 assignexp . SEMICOLON

    SEMICOLON       shift and go to state 222


state 199

    (67) assignexp -> exp .

    SEMICOLON       reduce using rule 67 (assignexp -> exp .)


state 200

    (15) idarray -> neuralinitarray exp verify . RIGHTSQR

    RIGHTSQR        shift and go to state 223


state 201

    (69) reading -> READ LEFTPAR neuralreadid idarray . mulread RIGHTPAR SEMICOLON
    (71) mulread -> . COMMA neuralreadid idarray mulread
    (72) mulread -> . empty
    (137) empty -> .

    COMMA           shift and go to state 225
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulread                        shift and go to state 224
    empty                          shift and go to state 226

state 202

    (73) writing -> WRITE LEFTPAR neuralwrite mulwrite . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 227


state 203

    (78) mulwrite -> COMMA . neuralwrite mulwrite
    (74) neuralwrite -> . writetype
    (75) neuralwrite -> . exp
    (76) writetype -> . STRING
    (77) writetype -> . CTECHAR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    STRING          shift and go to state 170
    CTECHAR         shift and go to state 171
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    ID              shift and go to state 158

    neuralwrite                    shift and go to state 228
    writetype                      shift and go to state 168
    exp                            shift and go to state 169
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 204

    (79) mulwrite -> empty .

    RIGHTPAR        reduce using rule 79 (mulwrite -> empty .)


state 205

    (68) returning -> RETURN LEFTPAR exp RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 229


state 206

    (80) ifing -> IF LEFTPAR exp neuralif . THEN LEFTBR statutes RIGHTBR elsing

    THEN            shift and go to state 230


state 207

    (84) neuralif -> RIGHTPAR .

    THEN            reduce using rule 84 (neuralif -> RIGHTPAR .)


state 208

    (85) whiling -> neuralwhile LEFTPAR exp neuralwhile2 . DO LEFTBR statutes RIGHTBR

    DO              shift and go to state 231


state 209

    (87) neuralwhile2 -> RIGHTPAR .

    DO              reduce using rule 87 (neuralwhile2 -> RIGHTPAR .)


state 210

    (88) foring -> FOR neuralfor idarray EQUAL . exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 232
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 211

    (52) media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 233

state 212

    (59) specfuncnumbers -> CTEINT neuralnum . mulnumeros
    (62) mulnumeros -> . COMMA specfuncnumbers
    (63) mulnumeros -> . empty
    (137) empty -> .

    COMMA           shift and go to state 235
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulnumeros                     shift and go to state 234
    empty                          shift and go to state 236

state 213

    (60) specfuncnumbers -> CTEFLOAT neuralnum . mulnumeros
    (62) mulnumeros -> . COMMA specfuncnumbers
    (63) mulnumeros -> . empty
    (137) empty -> .

    COMMA           shift and go to state 235
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulnumeros                     shift and go to state 237
    empty                          shift and go to state 236

state 214

    (57) plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 238

state 215

    (53) mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 239

state 216

    (54) moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 240

state 217

    (56) variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 241

state 218

    (55) stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR . specialfunclist SEMICOLON
    (58) specialfunclist -> .

    SEMICOLON       reduce using rule 58 (specialfunclist -> .)

    specialfunclist                shift and go to state 242

state 219

    (128) paramsexp -> LEFTPAR neuralera . paramsexp2 neuralpar
    (130) paramsexp2 -> . exp neuralpar2 mulparamsexp
    (131) paramsexp2 -> . empty
    (92) exp -> . andexp exp1
    (137) empty -> .
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    RIGHTPAR        reduce using rule 137 (empty -> .)
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    paramsexp2                     shift and go to state 243
    exp                            shift and go to state 244
    empty                          shift and go to state 245
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 220

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs . statutes RIGHTBR neuralfuncsize neuralendfuncs modules
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    statutes                       shift and go to state 246
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 221

    (34) mulparams -> COMMA parameters .

    RIGHTPAR        reduce using rule 34 (mulparams -> COMMA parameters .)


state 222

    (64) assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .

    READ            reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    WRITE           reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    RETURN          reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    IF              reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    FOR             reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    MEDIA           reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    PLOTXY          reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    MEDIANA         reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    MODA            reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    VARIANZA        reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    STDEV           reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    ID              reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    WHILE           reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    LEFTPAR         reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    CTEINT          reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    CTEFLOAT        reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    CTECHAR         reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)
    RIGHTBR         reduce using rule 64 (assign -> neuralassign idarray neuralassign2 assignexp SEMICOLON .)


state 223

    (15) idarray -> neuralinitarray exp verify RIGHTSQR .

    EQUAL           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    COMMA           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    RIGHTPAR        reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    TIMES           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    DIVIDE          reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    PLUS            reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    REST            reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    GREATER         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    GREATERAND      reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    LESSER          reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    LESSERAND       reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    SAME            reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    NOTSAME         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    NOT             reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    AND             reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    OR              reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    READ            reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    WRITE           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    RETURN          reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    IF              reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    FOR             reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    MEDIA           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    PLOTXY          reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    MEDIANA         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    MODA            reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    VARIANZA        reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    STDEV           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    ID              reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    WHILE           reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    LEFTPAR         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    CTEINT          reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    CTEFLOAT        reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    CTECHAR         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    RIGHTBR         reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    RIGHTSQR        reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    SEMICOLON       reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    TO              reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)
    DO              reduce using rule 15 (idarray -> neuralinitarray exp verify RIGHTSQR .)


state 224

    (69) reading -> READ LEFTPAR neuralreadid idarray mulread . RIGHTPAR SEMICOLON

    RIGHTPAR        shift and go to state 247


state 225

    (71) mulread -> COMMA . neuralreadid idarray mulread
    (70) neuralreadid -> . ID

    ID              shift and go to state 166

    neuralreadid                   shift and go to state 248

state 226

    (72) mulread -> empty .

    RIGHTPAR        reduce using rule 72 (mulread -> empty .)


state 227

    (73) writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 249


state 228

    (78) mulwrite -> COMMA neuralwrite . mulwrite
    (78) mulwrite -> . COMMA neuralwrite mulwrite
    (79) mulwrite -> . empty
    (137) empty -> .

    COMMA           shift and go to state 203
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulwrite                       shift and go to state 250
    empty                          shift and go to state 204

state 229

    (68) returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .

    READ            reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    IF              reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    FOR             reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    MEDIA           reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    PLOTXY          reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    MEDIANA         reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    MODA            reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    VARIANZA        reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    STDEV           reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    ID              reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    LEFTPAR         reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    CTEINT          reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    CTEFLOAT        reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    CTECHAR         reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)
    RIGHTBR         reduce using rule 68 (returning -> RETURN LEFTPAR exp RIGHTPAR SEMICOLON .)


state 230

    (80) ifing -> IF LEFTPAR exp neuralif THEN . LEFTBR statutes RIGHTBR elsing

    LEFTBR          shift and go to state 251


state 231

    (85) whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO . LEFTBR statutes RIGHTBR

    LEFTBR          shift and go to state 252


state 232

    (88) foring -> FOR neuralfor idarray EQUAL exp . neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (90) neuralfor2 -> . TO

    TO              shift and go to state 254

    neuralfor2                     shift and go to state 253

state 233

    (52) media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 255


state 234

    (59) specfuncnumbers -> CTEINT neuralnum mulnumeros .

    RIGHTPAR        reduce using rule 59 (specfuncnumbers -> CTEINT neuralnum mulnumeros .)


state 235

    (62) mulnumeros -> COMMA . specfuncnumbers
    (59) specfuncnumbers -> . CTEINT neuralnum mulnumeros
    (60) specfuncnumbers -> . CTEFLOAT neuralnum mulnumeros

    CTEINT          shift and go to state 178
    CTEFLOAT        shift and go to state 179

    specfuncnumbers                shift and go to state 256

state 236

    (63) mulnumeros -> empty .

    RIGHTPAR        reduce using rule 63 (mulnumeros -> empty .)


state 237

    (60) specfuncnumbers -> CTEFLOAT neuralnum mulnumeros .

    RIGHTPAR        reduce using rule 60 (specfuncnumbers -> CTEFLOAT neuralnum mulnumeros .)


state 238

    (57) plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 257


state 239

    (53) mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 258


state 240

    (54) moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 259


state 241

    (56) variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 260


state 242

    (55) stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist . SEMICOLON

    SEMICOLON       shift and go to state 261


state 243

    (128) paramsexp -> LEFTPAR neuralera paramsexp2 . neuralpar
    (132) neuralpar -> . RIGHTPAR

    RIGHTPAR        shift and go to state 263

    neuralpar                      shift and go to state 262

state 244

    (130) paramsexp2 -> exp . neuralpar2 mulparamsexp
    (134) neuralpar2 -> .

    COMMA           reduce using rule 134 (neuralpar2 -> .)
    RIGHTPAR        reduce using rule 134 (neuralpar2 -> .)

    neuralpar2                     shift and go to state 264

state 245

    (131) paramsexp2 -> empty .

    RIGHTPAR        reduce using rule 131 (paramsexp2 -> empty .)


state 246

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes . RIGHTBR neuralfuncsize neuralendfuncs modules

    RIGHTBR         shift and go to state 265


state 247

    (69) reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR . SEMICOLON

    SEMICOLON       shift and go to state 266


state 248

    (71) mulread -> COMMA neuralreadid . idarray mulread
    (15) idarray -> . neuralinitarray exp verify RIGHTSQR
    (16) idarray -> . empty
    (17) neuralinitarray -> . LEFTSQR
    (137) empty -> .

    LEFTSQR         shift and go to state 115
    COMMA           reduce using rule 137 (empty -> .)
    RIGHTPAR        reduce using rule 137 (empty -> .)

    idarray                        shift and go to state 267
    neuralinitarray                shift and go to state 113
    empty                          shift and go to state 114

state 249

    (73) writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .

    READ            reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    IF              reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    FOR             reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    MEDIA           reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    PLOTXY          reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    MEDIANA         reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    MODA            reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    VARIANZA        reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    STDEV           reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    ID              reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    LEFTPAR         reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    CTEINT          reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    CTEFLOAT        reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    CTECHAR         reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)
    RIGHTBR         reduce using rule 73 (writing -> WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON .)


state 250

    (78) mulwrite -> COMMA neuralwrite mulwrite .

    RIGHTPAR        reduce using rule 78 (mulwrite -> COMMA neuralwrite mulwrite .)


state 251

    (80) ifing -> IF LEFTPAR exp neuralif THEN LEFTBR . statutes RIGHTBR elsing
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    exp                            shift and go to state 59
    statutes                       shift and go to state 268
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 252

    (85) whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR . statutes RIGHTBR
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    neuralwhile                    shift and go to state 71
    exp                            shift and go to state 59
    statutes                       shift and go to state 269
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 253

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 . exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 270
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 254

    (90) neuralfor2 -> TO .

    LEFTPAR         reduce using rule 90 (neuralfor2 -> TO .)
    CTEINT          reduce using rule 90 (neuralfor2 -> TO .)
    CTEFLOAT        reduce using rule 90 (neuralfor2 -> TO .)
    CTECHAR         reduce using rule 90 (neuralfor2 -> TO .)
    ID              reduce using rule 90 (neuralfor2 -> TO .)


state 255

    (52) media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 52 (media -> MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 256

    (62) mulnumeros -> COMMA specfuncnumbers .

    RIGHTPAR        reduce using rule 62 (mulnumeros -> COMMA specfuncnumbers .)


state 257

    (57) plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 57 (plotxy -> PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 258

    (53) mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 53 (mediana -> MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 259

    (54) moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 54 (moda -> MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 260

    (56) variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 56 (variance -> VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 261

    (55) stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .

    READ            reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WRITE           reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RETURN          reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    IF              reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    FOR             reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIA           reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    PLOTXY          reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MEDIANA         reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    MODA            reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    VARIANZA        reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    STDEV           reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    ID              reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    WHILE           reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    LEFTPAR         reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEINT          reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTEFLOAT        reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    CTECHAR         reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)
    RIGHTBR         reduce using rule 55 (stdev -> STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON .)


state 262

    (128) paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .

    TIMES           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    DIVIDE          reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    PLUS            reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    REST            reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    GREATER         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    GREATERAND      reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    LESSER          reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    LESSERAND       reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    SAME            reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    NOTSAME         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    NOT             reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    AND             reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    OR              reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    READ            reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    WRITE           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    RETURN          reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    IF              reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    FOR             reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    MEDIA           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    PLOTXY          reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    MEDIANA         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    MODA            reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    VARIANZA        reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    STDEV           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    ID              reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    WHILE           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    LEFTPAR         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    CTEINT          reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    CTEFLOAT        reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    CTECHAR         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    RIGHTBR         reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    RIGHTPAR        reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    RIGHTSQR        reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    COMMA           reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    SEMICOLON       reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    TO              reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)
    DO              reduce using rule 128 (paramsexp -> LEFTPAR neuralera paramsexp2 neuralpar .)


state 263

    (132) neuralpar -> RIGHTPAR .

    TIMES           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    DIVIDE          reduce using rule 132 (neuralpar -> RIGHTPAR .)
    PLUS            reduce using rule 132 (neuralpar -> RIGHTPAR .)
    REST            reduce using rule 132 (neuralpar -> RIGHTPAR .)
    GREATER         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    GREATERAND      reduce using rule 132 (neuralpar -> RIGHTPAR .)
    LESSER          reduce using rule 132 (neuralpar -> RIGHTPAR .)
    LESSERAND       reduce using rule 132 (neuralpar -> RIGHTPAR .)
    SAME            reduce using rule 132 (neuralpar -> RIGHTPAR .)
    NOTSAME         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    NOT             reduce using rule 132 (neuralpar -> RIGHTPAR .)
    AND             reduce using rule 132 (neuralpar -> RIGHTPAR .)
    OR              reduce using rule 132 (neuralpar -> RIGHTPAR .)
    READ            reduce using rule 132 (neuralpar -> RIGHTPAR .)
    WRITE           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    RETURN          reduce using rule 132 (neuralpar -> RIGHTPAR .)
    IF              reduce using rule 132 (neuralpar -> RIGHTPAR .)
    FOR             reduce using rule 132 (neuralpar -> RIGHTPAR .)
    MEDIA           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    PLOTXY          reduce using rule 132 (neuralpar -> RIGHTPAR .)
    MEDIANA         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    MODA            reduce using rule 132 (neuralpar -> RIGHTPAR .)
    VARIANZA        reduce using rule 132 (neuralpar -> RIGHTPAR .)
    STDEV           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    ID              reduce using rule 132 (neuralpar -> RIGHTPAR .)
    WHILE           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    LEFTPAR         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    CTEINT          reduce using rule 132 (neuralpar -> RIGHTPAR .)
    CTEFLOAT        reduce using rule 132 (neuralpar -> RIGHTPAR .)
    CTECHAR         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    RIGHTBR         reduce using rule 132 (neuralpar -> RIGHTPAR .)
    RIGHTPAR        reduce using rule 132 (neuralpar -> RIGHTPAR .)
    RIGHTSQR        reduce using rule 132 (neuralpar -> RIGHTPAR .)
    COMMA           reduce using rule 132 (neuralpar -> RIGHTPAR .)
    SEMICOLON       reduce using rule 132 (neuralpar -> RIGHTPAR .)
    TO              reduce using rule 132 (neuralpar -> RIGHTPAR .)
    DO              reduce using rule 132 (neuralpar -> RIGHTPAR .)


state 264

    (130) paramsexp2 -> exp neuralpar2 . mulparamsexp
    (135) mulparamsexp -> . COMMA exp neuralpar2 mulparamsexp
    (136) mulparamsexp -> . empty
    (137) empty -> .

    COMMA           shift and go to state 272
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulparamsexp                   shift and go to state 271
    empty                          shift and go to state 273

state 265

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR . neuralfuncsize neuralendfuncs modules
    (27) neuralfuncsize -> .

    FUNCTION        reduce using rule 27 (neuralfuncsize -> .)
    MAIN            reduce using rule 27 (neuralfuncsize -> .)

    neuralfuncsize                 shift and go to state 274

state 266

    (69) reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .

    READ            reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    WRITE           reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    RETURN          reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    IF              reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    FOR             reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    MEDIA           reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    PLOTXY          reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    MEDIANA         reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    MODA            reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    VARIANZA        reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    STDEV           reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    ID              reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    WHILE           reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    LEFTPAR         reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    CTEINT          reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    CTEFLOAT        reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    CTECHAR         reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)
    RIGHTBR         reduce using rule 69 (reading -> READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON .)


state 267

    (71) mulread -> COMMA neuralreadid idarray . mulread
    (71) mulread -> . COMMA neuralreadid idarray mulread
    (72) mulread -> . empty
    (137) empty -> .

    COMMA           shift and go to state 225
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulread                        shift and go to state 275
    empty                          shift and go to state 226

state 268

    (80) ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes . RIGHTBR elsing

    RIGHTBR         shift and go to state 276


state 269

    (85) whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes . RIGHTBR

    RIGHTBR         shift and go to state 277


state 270

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp . neuralfor3 LEFTBR statutes RIGHTBR
    (91) neuralfor3 -> . DO

    DO              shift and go to state 279

    neuralfor3                     shift and go to state 278

state 271

    (130) paramsexp2 -> exp neuralpar2 mulparamsexp .

    RIGHTPAR        reduce using rule 130 (paramsexp2 -> exp neuralpar2 mulparamsexp .)


state 272

    (135) mulparamsexp -> COMMA . exp neuralpar2 mulparamsexp
    (92) exp -> . andexp exp1
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90
    ID              shift and go to state 158

    exp                            shift and go to state 280
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 273

    (136) mulparamsexp -> empty .

    RIGHTPAR        reduce using rule 136 (mulparamsexp -> empty .)


state 274

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize . neuralendfuncs modules
    (26) neuralendfuncs -> .

    FUNCTION        reduce using rule 26 (neuralendfuncs -> .)
    MAIN            reduce using rule 26 (neuralendfuncs -> .)

    neuralendfuncs                 shift and go to state 281

state 275

    (71) mulread -> COMMA neuralreadid idarray mulread .

    RIGHTPAR        reduce using rule 71 (mulread -> COMMA neuralreadid idarray mulread .)


state 276

    (80) ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR . elsing
    (81) elsing -> . neuralelse LEFTBR statutes RIGHTBR
    (82) elsing -> . empty
    (83) neuralelse -> . ELSE
    (137) empty -> .

    ELSE            shift and go to state 285
    READ            reduce using rule 137 (empty -> .)
    WRITE           reduce using rule 137 (empty -> .)
    RETURN          reduce using rule 137 (empty -> .)
    IF              reduce using rule 137 (empty -> .)
    FOR             reduce using rule 137 (empty -> .)
    MEDIA           reduce using rule 137 (empty -> .)
    PLOTXY          reduce using rule 137 (empty -> .)
    MEDIANA         reduce using rule 137 (empty -> .)
    MODA            reduce using rule 137 (empty -> .)
    VARIANZA        reduce using rule 137 (empty -> .)
    STDEV           reduce using rule 137 (empty -> .)
    ID              reduce using rule 137 (empty -> .)
    WHILE           reduce using rule 137 (empty -> .)
    LEFTPAR         reduce using rule 137 (empty -> .)
    CTEINT          reduce using rule 137 (empty -> .)
    CTEFLOAT        reduce using rule 137 (empty -> .)
    CTECHAR         reduce using rule 137 (empty -> .)
    RIGHTBR         reduce using rule 137 (empty -> .)

    elsing                         shift and go to state 282
    neuralelse                     shift and go to state 283
    empty                          shift and go to state 284

state 277

    (85) whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .

    READ            reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    WRITE           reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    RETURN          reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    IF              reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    FOR             reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    MEDIA           reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    PLOTXY          reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    MEDIANA         reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    MODA            reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    VARIANZA        reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    STDEV           reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    ID              reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    WHILE           reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    LEFTPAR         reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    CTEINT          reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    CTEFLOAT        reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    CTECHAR         reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)
    RIGHTBR         reduce using rule 85 (whiling -> neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR .)


state 278

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 . LEFTBR statutes RIGHTBR

    LEFTBR          shift and go to state 286


state 279

    (91) neuralfor3 -> DO .

    LEFTBR          reduce using rule 91 (neuralfor3 -> DO .)


state 280

    (135) mulparamsexp -> COMMA exp . neuralpar2 mulparamsexp
    (134) neuralpar2 -> .

    COMMA           reduce using rule 134 (neuralpar2 -> .)
    RIGHTPAR        reduce using rule 134 (neuralpar2 -> .)

    neuralpar2                     shift and go to state 287

state 281

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs . modules
    (22) modules -> . FUNCTION functype neuralinsertfuncs funcparam
    (23) modules -> . empty
    (137) empty -> .

    FUNCTION        shift and go to state 10
    MAIN            reduce using rule 137 (empty -> .)

    modules                        shift and go to state 288
    empty                          shift and go to state 11

state 282

    (80) ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .

    READ            reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    WRITE           reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    RETURN          reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    IF              reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    FOR             reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    MEDIA           reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    PLOTXY          reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    MEDIANA         reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    MODA            reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    VARIANZA        reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    STDEV           reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    ID              reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    WHILE           reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    LEFTPAR         reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    CTEINT          reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    CTEFLOAT        reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    CTECHAR         reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)
    RIGHTBR         reduce using rule 80 (ifing -> IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing .)


state 283

    (81) elsing -> neuralelse . LEFTBR statutes RIGHTBR

    LEFTBR          shift and go to state 289


state 284

    (82) elsing -> empty .

    READ            reduce using rule 82 (elsing -> empty .)
    WRITE           reduce using rule 82 (elsing -> empty .)
    RETURN          reduce using rule 82 (elsing -> empty .)
    IF              reduce using rule 82 (elsing -> empty .)
    FOR             reduce using rule 82 (elsing -> empty .)
    MEDIA           reduce using rule 82 (elsing -> empty .)
    PLOTXY          reduce using rule 82 (elsing -> empty .)
    MEDIANA         reduce using rule 82 (elsing -> empty .)
    MODA            reduce using rule 82 (elsing -> empty .)
    VARIANZA        reduce using rule 82 (elsing -> empty .)
    STDEV           reduce using rule 82 (elsing -> empty .)
    ID              reduce using rule 82 (elsing -> empty .)
    WHILE           reduce using rule 82 (elsing -> empty .)
    LEFTPAR         reduce using rule 82 (elsing -> empty .)
    CTEINT          reduce using rule 82 (elsing -> empty .)
    CTEFLOAT        reduce using rule 82 (elsing -> empty .)
    CTECHAR         reduce using rule 82 (elsing -> empty .)
    RIGHTBR         reduce using rule 82 (elsing -> empty .)


state 285

    (83) neuralelse -> ELSE .

    LEFTBR          reduce using rule 83 (neuralelse -> ELSE .)


state 286

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR . statutes RIGHTBR
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    exp                            shift and go to state 59
    statutes                       shift and go to state 290
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 287

    (135) mulparamsexp -> COMMA exp neuralpar2 . mulparamsexp
    (135) mulparamsexp -> . COMMA exp neuralpar2 mulparamsexp
    (136) mulparamsexp -> . empty
    (137) empty -> .

    COMMA           shift and go to state 272
    RIGHTPAR        reduce using rule 137 (empty -> .)

    mulparamsexp                   shift and go to state 291
    empty                          shift and go to state 273

state 288

    (25) funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules .

    MAIN            reduce using rule 25 (funcparam -> LEFTPAR parameters RIGHTPAR SEMICOLON varsgl LEFTBR neuralinitfuncs statutes RIGHTBR neuralfuncsize neuralendfuncs modules .)


state 289

    (81) elsing -> neuralelse LEFTBR . statutes RIGHTBR
    (36) statutes -> . assign statuteaux
    (37) statutes -> . reading statuteaux
    (38) statutes -> . writing statuteaux
    (39) statutes -> . returning statuteaux
    (40) statutes -> . ifing statuteaux
    (41) statutes -> . whiling statuteaux
    (42) statutes -> . foring statuteaux
    (43) statutes -> . exp statuteaux
    (44) statutes -> . media statuteaux
    (45) statutes -> . plotxy statuteaux
    (46) statutes -> . mediana statuteaux
    (47) statutes -> . moda statuteaux
    (48) statutes -> . variance statuteaux
    (49) statutes -> . stdev statuteaux
    (64) assign -> . neuralassign idarray neuralassign2 assignexp SEMICOLON
    (69) reading -> . READ LEFTPAR neuralreadid idarray mulread RIGHTPAR SEMICOLON
    (73) writing -> . WRITE LEFTPAR neuralwrite mulwrite RIGHTPAR SEMICOLON
    (68) returning -> . RETURN LEFTPAR exp RIGHTPAR SEMICOLON
    (80) ifing -> . IF LEFTPAR exp neuralif THEN LEFTBR statutes RIGHTBR elsing
    (85) whiling -> . neuralwhile LEFTPAR exp neuralwhile2 DO LEFTBR statutes RIGHTBR
    (88) foring -> . FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR
    (92) exp -> . andexp exp1
    (52) media -> . MEDIA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (57) plotxy -> . PLOTXY LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (53) mediana -> . MEDIANA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (54) moda -> . MODA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (56) variance -> . VARIANZA LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (55) stdev -> . STDEV LEFTPAR specfuncnumbers RIGHTPAR specialfunclist SEMICOLON
    (65) neuralassign -> . ID
    (86) neuralwhile -> . WHILE
    (95) andexp -> . boolexp andexp1
    (99) boolexp -> . arithexp boolexp1
    (109) arithexp -> . geoexp arithexp1
    (114) geoexp -> . finexp geoexp1
    (121) finexp -> . addbottom exp popbottom
    (122) finexp -> . cteexp
    (119) addbottom -> . LEFTPAR
    (123) cteexp -> . CTEINT
    (124) cteexp -> . CTEFLOAT
    (125) cteexp -> . CTECHAR
    (126) cteexp -> . ID neuralexist paramsexp

    READ            shift and go to state 67
    WRITE           shift and go to state 68
    RETURN          shift and go to state 69
    IF              shift and go to state 70
    FOR             shift and go to state 72
    MEDIA           shift and go to state 74
    PLOTXY          shift and go to state 75
    MEDIANA         shift and go to state 76
    MODA            shift and go to state 77
    VARIANZA        shift and go to state 78
    STDEV           shift and go to state 79
    ID              shift and go to state 80
    WHILE           shift and go to state 81
    LEFTPAR         shift and go to state 50
    CTEINT          shift and go to state 88
    CTEFLOAT        shift and go to state 89
    CTECHAR         shift and go to state 90

    statutes                       shift and go to state 292
    assign                         shift and go to state 52
    reading                        shift and go to state 53
    writing                        shift and go to state 54
    returning                      shift and go to state 55
    ifing                          shift and go to state 56
    whiling                        shift and go to state 57
    foring                         shift and go to state 58
    exp                            shift and go to state 59
    media                          shift and go to state 60
    plotxy                         shift and go to state 61
    mediana                        shift and go to state 62
    moda                           shift and go to state 63
    variance                       shift and go to state 64
    stdev                          shift and go to state 65
    neuralassign                   shift and go to state 66
    neuralwhile                    shift and go to state 71
    andexp                         shift and go to state 73
    boolexp                        shift and go to state 82
    arithexp                       shift and go to state 83
    geoexp                         shift and go to state 84
    finexp                         shift and go to state 85
    addbottom                      shift and go to state 86
    cteexp                         shift and go to state 87

state 290

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes . RIGHTBR

    RIGHTBR         shift and go to state 293


state 291

    (135) mulparamsexp -> COMMA exp neuralpar2 mulparamsexp .

    RIGHTPAR        reduce using rule 135 (mulparamsexp -> COMMA exp neuralpar2 mulparamsexp .)


state 292

    (81) elsing -> neuralelse LEFTBR statutes . RIGHTBR

    RIGHTBR         shift and go to state 294


state 293

    (88) foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .

    READ            reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    WRITE           reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    RETURN          reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    IF              reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    FOR             reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    MEDIA           reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    PLOTXY          reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    MEDIANA         reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    MODA            reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    VARIANZA        reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    STDEV           reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    ID              reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    WHILE           reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    LEFTPAR         reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    CTEINT          reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    CTEFLOAT        reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    CTECHAR         reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)
    RIGHTBR         reduce using rule 88 (foring -> FOR neuralfor idarray EQUAL exp neuralfor2 exp neuralfor3 LEFTBR statutes RIGHTBR .)


state 294

    (81) elsing -> neuralelse LEFTBR statutes RIGHTBR .

    READ            reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    WRITE           reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    RETURN          reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    IF              reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    FOR             reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    MEDIA           reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    PLOTXY          reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    MEDIANA         reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    MODA            reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    VARIANZA        reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    STDEV           reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    ID              reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    WHILE           reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    LEFTPAR         reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    CTEINT          reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    CTEFLOAT        reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    CTECHAR         reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)
    RIGHTBR         reduce using rule 81 (elsing -> neuralelse LEFTBR statutes RIGHTBR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LEFTPAR in state 132 resolved as shift
WARNING: reduce/reduce conflict in state 80 resolved using rule (neuralassign -> ID)
WARNING: rejected rule (neuralexist -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 171 resolved using rule (writetype -> CTECHAR)
WARNING: rejected rule (cteexp -> CTECHAR) in state 171
